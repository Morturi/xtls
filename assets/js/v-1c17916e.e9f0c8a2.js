"use strict";(self.webpackChunkXray_docs_next=self.webpackChunkXray_docs_next||[]).push([[6214],{78964:(n,s,a)=>{a.r(s),a.d(s,{data:()=>e});const e={key:"v-1c17916e",path:"/document/level-2/iptables_gid.html",title:"GID 透明代理",lang:"zh-CN",frontmatter:{title:"GID 透明代理"},excerpt:"",headers:[{level:2,title:"思路",slug:"思路",children:[]},{level:2,title:"配置过程",slug:"配置过程",children:[{level:3,title:"1. 前期准备",slug:"_1-前期准备",children:[]},{level:3,title:"2. 添加用户(安卓用户请忽略)",slug:"_2-添加用户-安卓用户请忽略",children:[]},{level:3,title:"3. 配置运行 Xray，配置 iptables 规则",slug:"_3-配置运行-xray-配置-iptables-规则",children:[]}]},{level:2,title:"下面提供一个实现 tproxy 全局代理的完整配置过程",slug:"下面提供一个实现-tproxy-全局代理的完整配置过程",children:[{level:3,title:"1. 完成 前期准备 和 添加用户",slug:"_1-完成-前期准备-和-添加用户",children:[]},{level:3,title:"2. 准备 Xray 配置文件",slug:"_2-准备-xray-配置文件",children:[]},{level:3,title:"3. 配置最大文件打开数&运行 Xray 客户端",slug:"_3-配置最大文件打开数-运行-xray-客户端",children:[]},{level:3,title:"4. 设置 iptables 规则",slug:"_4-设置-iptables-规则",children:[]}]}],filePathRelative:"document/level-2/iptables_gid.md",git:{updatedTime:1634209223e3,contributors:[{name:"JimhHan",email:"50871214+JimhHan@users.noreply.github.com",commits:3},{name:"JuanCC",email:"72336775+JuanCldCmt@users.noreply.github.com",commits:1},{name:"R3pl4c3r",email:"30682790+R3pl4c3r@users.noreply.github.com",commits:1}]}}},54002:(n,s,a)=>{a.r(s),a.d(s,{default:()=>O});var e=a(66252);const p=(0,e._)("h1",{id:"透明代理通过-gid-规避-xray-流量",tabindex:"-1"},[(0,e._)("a",{class:"header-anchor",href:"#透明代理通过-gid-规避-xray-流量","aria-hidden":"true"},"#"),(0,e.Uk)(" 透明代理通过 gid 规避 Xray 流量")],-1),l=(0,e.Uk)("在现有的 iptables 透明代理白话文("),r={href:"https://guide.v2fly.org/app/transparent_proxy.html",target:"_blank",rel:"noopener noreferrer"},t=(0,e.Uk)("新 V2Ray 白话文指南-透明代理"),o=(0,e.Uk)(" 、 "),i={href:"https://guide.v2fly.org/app/tproxy.html",target:"_blank",rel:"noopener noreferrer"},c=(0,e.Uk)("新 V2Ray 白话文指南-透明代理(TPROXY)"),u=(0,e.Uk)(" 、 "),b=(0,e._)("strong",null,[(0,e._)("a",{href:"./tproxy"},"透明代理（TProxy）配置教程")],-1),m=(0,e.Uk)(")教程中，对 Xray 流量的规避处理是打 mark 实现的。即对 Xray 出站流量打 mark，通过设置 iptables 规则对对应 mark 的流量直连，来规避 Xray 流量，防止回环。"),d=(0,e._)("p",null,"这么做有以下几个问题：",-1),g={href:"https://github.com/v2ray/v2ray-core/issues/2621",target:"_blank",rel:"noopener noreferrer"},k=(0,e.Uk)("莫名流量进入 PREROUTING 链"),h=(0,e._)("li",null,[(0,e._)("p",null,"安卓系统有自己的 mark 机制，该方案在安卓上不可用")],-1),y=(0,e.uE)('<p>本教程的方案不需要设置 mark，理论性能更高，同时也不存在上述问题。</p><h2 id="思路" tabindex="-1"><a class="header-anchor" href="#思路" aria-hidden="true">#</a> 思路</h2><p>tproxy 流量只能被 root 权限用户(uid==0)或其他有 CAP_NET_ADMIN 权限的用户接收。</p><p>iptables 规则可以通过 uid(用户 id)和 gid(用户组 id)分流。</p><p>让 Xray 运行在一个 uid==0 但 gid!=0 的用户上，设置 iptables 规则不代理该 gid 的流量来规避 Xray 流量。</p><h2 id="配置过程" tabindex="-1"><a class="header-anchor" href="#配置过程" aria-hidden="true">#</a> 配置过程</h2><h3 id="_1-前期准备" tabindex="-1"><a class="header-anchor" href="#_1-前期准备" aria-hidden="true">#</a> 1. 前期准备</h3><p><strong>安卓系统</strong></p>',8),_=(0,e._)("li",null,[(0,e._)("p",null,"系统已 root")],-1),A=(0,e.Uk)("安装 "),x={href:"https://play.google.com/store/apps/details?id=stericson.busybox",target:"_blank",rel:"noopener noreferrer"},v=(0,e.Uk)("busybox"),R=(0,e._)("li",null,[(0,e._)("p",null,"有一个可以执行命令的终端，可以使用 adb shell，termux 等。")],-1),f=(0,e.uE)('<p><strong>其它 Linux 系统</strong></p><p>需要依赖 sudo，iptables 的 tproxy 模块和 extra 模块。</p><p>一般系统都有自带，openwrt 运行：</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>opkg <span class="token function">install</span> <span class="token function">sudo</span> iptables-mod-tproxy iptables-mod-extra\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>另附上一些 openwrt 常用的依赖，缺少可能导致 Xray 无法运行</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>opkg <span class="token function">install</span> libopenssl ca-certificates\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h3 id="_2-添加用户-安卓用户请忽略" tabindex="-1"><a class="header-anchor" href="#_2-添加用户-安卓用户请忽略" aria-hidden="true">#</a> 2. 添加用户(安卓用户请忽略)</h3><p>安卓系统不支持/etc/passwd 文件来管理用户，请忽略，直接下一步。</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">grep</span> -qw xray_tproxy /etc/passwd <span class="token operator">||</span> <span class="token builtin class-name">echo</span> <span class="token string">&quot;xray_tproxy:x:0:23333:::&quot;</span> <span class="token operator">&gt;&gt;</span> /etc/passwd\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>其中 xray_tproxy 是用户名，0 是 uid，23333 是 gid，用户名和 gid 可以自己定，uid 必须为 0。 检查用户是否添加成功，运行</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">sudo</span> -u xray_tproxy <span class="token function">id</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>显示的结果应该是 uid 为 0，gid 为 23333</p><h3 id="_3-配置运行-xray-配置-iptables-规则" tabindex="-1"><a class="header-anchor" href="#_3-配置运行-xray-配置-iptables-规则" aria-hidden="true">#</a> 3. 配置运行 Xray，配置 iptables 规则</h3>',13),E=(0,e.Uk)("在现有的 iptables 透明代理白话文("),X={href:"https://guide.v2fly.org/app/transparent_proxy.html",target:"_blank",rel:"noopener noreferrer"},q=(0,e.Uk)("新 V2Ray 白话文指南-透明代理"),U=(0,e.Uk)(" 、 "),T={href:"https://guide.v2fly.org/app/tproxy.html",target:"_blank",rel:"noopener noreferrer"},Y=(0,e.Uk)("新 V2Ray 白话文指南-透明代理(TPROXY)"),j=(0,e.Uk)(" 、 "),w=(0,e._)("strong",null,[(0,e._)("a",{href:"./tproxy"},"透明代理（TProxy）配置教程")],-1),N=(0,e.Uk)(")教程的基础上修改："),P=(0,e.uE)('<ol><li><p>修改 json 配置文件，删除 mark 相关内容</p></li><li><p>修改 iptables 规则，删除 mark 相关内容，并在 OUTPUT 链应用规则处添加选项&quot;-m owner ! --gid-owner 23333&quot;。</p></li></ol><p>如：</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>iptables -t mangle -A OUTPUT -j XRAY_SELF\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>改为</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>iptables -t mangle -A OUTPUT -m owner <span class="token operator">!</span> --gid-owner <span class="token number">23333</span> -j XRAY_SELF\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><ol start="3"><li>修改运行 Xray 的方式，使其运行在 uid 为 0，gid 为 23333 的用户上，参考<a href="#3-%E9%85%8D%E7%BD%AE%E6%9C%80%E5%A4%A7%E6%96%87%E4%BB%B6%E6%89%93%E5%BC%80%E6%95%B0%E8%BF%90%E8%A1%8Cxray%E5%AE%A2%E6%88%B7%E7%AB%AF">这里</a>。</li></ol><h2 id="下面提供一个实现-tproxy-全局代理的完整配置过程" tabindex="-1"><a class="header-anchor" href="#下面提供一个实现-tproxy-全局代理的完整配置过程" aria-hidden="true">#</a> 下面提供一个实现 tproxy 全局代理的完整配置过程</h2><h3 id="_1-完成-前期准备-和-添加用户" tabindex="-1"><a class="header-anchor" href="#_1-完成-前期准备-和-添加用户" aria-hidden="true">#</a> 1. 完成 <strong><a href="#1-%E5%89%8D%E6%9C%9F%E5%87%86%E5%A4%87">前期准备</a></strong> 和 <strong><a href="#2-%E6%B7%BB%E5%8A%A0%E7%94%A8%E6%88%B7%E5%AE%89%E5%8D%93%E7%94%A8%E6%88%B7%E8%AF%B7%E5%BF%BD%E7%95%A5">添加用户</a></strong></h3><h3 id="_2-准备-xray-配置文件" tabindex="-1"><a class="header-anchor" href="#_2-准备-xray-配置文件" aria-hidden="true">#</a> 2. 准备 Xray 配置文件</h3><p>配置 Xray 任意门监听 12345，开启 followRedirect 和 tproxy，不需要设置 sniffing：</p><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token punctuation">{</span>\n  <span class="token property">&quot;inbounds&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n    <span class="token punctuation">{</span>\n      <span class="token property">&quot;port&quot;</span><span class="token operator">:</span> <span class="token number">12345</span><span class="token punctuation">,</span>\n      <span class="token property">&quot;protocol&quot;</span><span class="token operator">:</span> <span class="token string">&quot;dokodemo-door&quot;</span><span class="token punctuation">,</span>\n      <span class="token property">&quot;settings&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token property">&quot;network&quot;</span><span class="token operator">:</span> <span class="token string">&quot;tcp,udp&quot;</span><span class="token punctuation">,</span>\n        <span class="token property">&quot;followRedirect&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token property">&quot;streamSettings&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token property">&quot;sockopt&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n          <span class="token property">&quot;tproxy&quot;</span><span class="token operator">:</span> <span class="token string">&quot;tproxy&quot;</span>\n        <span class="token punctuation">}</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;outbounds&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n    <span class="token punctuation">{</span>\n      你的服务器配置\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">]</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div><h3 id="_3-配置最大文件打开数-运行-xray-客户端" tabindex="-1"><a class="header-anchor" href="#_3-配置最大文件打开数-运行-xray-客户端" aria-hidden="true">#</a> 3. 配置最大文件打开数&amp;运行 Xray 客户端</h3>',12),S=(0,e.Uk)("关于最大文件打开数问题见： "),B={href:"https://guide.v2fly.org/app/tproxy.html#%E8%A7%A3%E5%86%B3-too-many-open-files-%E9%97%AE%E9%A2%98",target:"_blank",rel:"noopener noreferrer"},M=(0,e.Uk)("too many open files 问题"),K=(0,e.uE)('<p>目前 Xray 服务端使用官方脚本安装的已经自动配置了最大文件打开数，无需再修改。</p><p><strong>安卓系统</strong></p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token builtin class-name">ulimit</span> -SHn <span class="token number">1000000</span>\nsetuidgid <span class="token number">0</span>:23333 <span class="token string">&quot;运行Xray的命令&quot;</span><span class="token operator">&amp;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><strong>其它 Linux 系统</strong></p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token builtin class-name">ulimit</span> -SHn <span class="token number">1000000</span>\n<span class="token function">sudo</span> -u xray_tproxy <span class="token string">&quot;运行Xray的命令&quot;</span><span class="token operator">&amp;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>例如：</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token builtin class-name">ulimit</span> -SHn <span class="token number">1000000</span>\n<span class="token function">sudo</span> -u xray_tproxy xray -c /etc/xray/config.json <span class="token operator">&amp;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><em>第一条命令：</em></p><p>改变最大打开文件数，只对当前终端有效，每次启动 Xray 前都要运行，该命令是设置客户端的最大文件打开数</p><p><em>第二条命令：</em></p><p>以 uid 为 0，gid 不为 0 的用户来运行 Xray 客户端，后面加&amp;代表放在后台运行</p><p><strong>检查最大文件打开数是否设置成功</strong></p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">cat</span> /proc/Xray的pid/limits\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>找到 max open files 一项，应该是你设置的数值。pid 的获取方法为运行<code>ps</code>或<code>ps -aux</code>或<code>ps -a</code>或<code>pidof xray</code></p><p>服务端和客户端都要检查</p><h3 id="_4-设置-iptables-规则" tabindex="-1"><a class="header-anchor" href="#_4-设置-iptables-规则" aria-hidden="true">#</a> 4. 设置 iptables 规则</h3><p><strong>代理 ipv4</strong></p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">ip</span> rule <span class="token function">add</span> fwmark <span class="token number">1</span> table <span class="token number">100</span>\n<span class="token function">ip</span> route <span class="token function">add</span> <span class="token builtin class-name">local</span> <span class="token number">0.0</span>.0.0/0 dev lo table <span class="token number">100</span>\n\n<span class="token comment"># 代理局域网设备</span>\niptables -t mangle -N XRAY\n<span class="token comment">#  &quot;网关所在ipv4网段&quot; 通过运行命令&quot;ip address | grep -w inet | awk &#39;{print $2}&#39;&quot;获得，一般有多个</span>\niptables -t mangle -A XRAY -d 网关所在ipv4网段1 -j RETURN\niptables -t mangle -A XRAY -d 网关所在ipv4网段2 -j RETURN\n<span class="token punctuation">..</span>.\n\n<span class="token comment"># 组播地址/E类地址/广播地址直连</span>\niptables -t mangle -A XRAY -d <span class="token number">224.0</span>.0.0/3 -j RETURN\n\n\n<span class="token comment">#如果网关作为主路由，则加上这一句，见：https://xtls.github.io/documents/level-2/transparent_proxy/transparent_proxy.md#iptables透明代理的其它注意事项</span>\n<span class="token comment">#网关LAN_IPv4地址段，运行命令&quot;ip address | grep -w &quot;inet&quot; | awk &#39;{print $2}&#39;&quot;获得，是其中的一个</span>\niptables -t mangle -A XRAY <span class="token operator">!</span> -s 网关LAN_IPv4地址段 -j RETURN\n\n<span class="token comment"># 给 TCP 打标记 1，转发至 12345 端口</span>\n<span class="token comment"># mark只有设置为1，流量才能被Xray任意门接受</span>\niptables -t mangle -A XRAY -p tcp -j TPROXY --on-port <span class="token number">12345</span> --tproxy-mark <span class="token number">1</span>\niptables -t mangle -A XRAY -p udp -j TPROXY --on-port <span class="token number">12345</span> --tproxy-mark <span class="token number">1</span>\n<span class="token comment"># 应用规则</span>\niptables -t mangle -A PREROUTING -j XRAY\n\n<span class="token comment"># 代理网关本机</span>\niptables -t mangle -N XRAY_MASK\niptables -t mangle -A XRAY_MASK -m owner --gid-owner <span class="token number">23333</span> -j RETURN\niptables -t mangle -A XRAY_MASK -d 网关所在ipv4网段1 -j RETURN\niptables -t mangle -A XRAY_MASK -d 网关所在ipv4网段2 -j RETURN\n<span class="token punctuation">..</span>.\niptables -t mangle -A XRAY_MASK -d <span class="token number">224.0</span>.0.0/3 -j RETURN\niptables -t mangle -A XRAY_MASK -j MARK --set-mark <span class="token number">1</span>\niptables -t mangle -A OUTPUT -p tcp -j XRAY_MASK\niptables -t mangle -A OUTPUT -p udp -j XRAY_MASK\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br></div></div><p><strong>代理 ipv6(可选)</strong></p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">ip</span> -6 rule <span class="token function">add</span> fwmark <span class="token number">1</span> table <span class="token number">106</span>\n<span class="token function">ip</span> -6 route <span class="token function">add</span> <span class="token builtin class-name">local</span> ::/0 dev lo table <span class="token number">106</span>\n\n<span class="token comment"># 代理局域网设备</span>\nip6tables -t mangle -N XRAY6\n<span class="token comment"># &quot;网关所在ip6网段&quot; 通过运行命令&quot;ip address | grep -w inet6 | awk &#39;{print $2}&#39;&quot;获得。</span>\nip6tables -t mangle -A XRAY6 -d 网关所在ipv6网段1 -j RETURN\nip6tables -t mangle -A XRAY6 -d 网关所在ipv6网段2 -j RETURN\n<span class="token punctuation">..</span>.\n\n<span class="token comment"># 如果网关作为主路由，则加上这一句，见：https://xtls.github.io/documents/level-2/transparent_proxy/transparent_proxy.md#iptables透明代理的其它注意事项</span>\n<span class="token comment"># 网关LAN_IPv6地址段，运行命令&quot;ip address | grep -w &quot;inet6&quot; | awk &#39;{print $2}&#39;&quot;获得，是其中的一个</span>\nip6tables -t mangle -A XRAY6 <span class="token operator">!</span> -s 网关LAN_IPv6地址段 -j RETURN\n\nip6tables -t mangle -A XRAY6 -p udp -j TPROXY --on-port <span class="token number">12345</span> --tproxy-mark <span class="token number">1</span>\nip6tables -t mangle -A XRAY6 -p tcp -j TPROXY --on-port <span class="token number">12345</span> --tproxy-mark <span class="token number">1</span>\nip6tables -t mangle -A PREROUTING -j XRAY6\n\n<span class="token comment"># 代理网关本机</span>\nip6tables -t mangle -N XRAY6_MASK\nip6tables -t mangle -A XRAY6_MASK -m owner --gid-owner <span class="token number">23333</span> -j RETURN\nip6tables -t mangle -A XRAY6_MASK -d 网关所在ipv6网段1 -j RETURN\nip6tables -t mangle -A XRAY6_MASK -d 网关所在ipv6网段2 -j RETURN\n<span class="token punctuation">..</span>.\nip6tables -t mangle -A XRAY6_MASK -j MARK --set-mark <span class="token number">1</span>\nip6tables -t mangle -A OUTPUT -p tcp -j XRAY6_MASK\nip6tables -t mangle -A OUTPUT -p udp -j XRAY6_MASK\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br></div></div>',20),O={render:function(n,s){const a=(0,e.up)("OutboundLink");return(0,e.wg)(),(0,e.iD)(e.HY,null,[p,(0,e._)("p",null,[l,(0,e._)("strong",null,[(0,e._)("a",r,[t,(0,e.Wm)(a)])]),o,(0,e._)("strong",null,[(0,e._)("a",i,[c,(0,e.Wm)(a)])]),u,b,m]),d,(0,e._)("ol",null,[(0,e._)("li",null,[(0,e._)("p",null,[(0,e._)("strong",null,[(0,e._)("a",g,[k,(0,e.Wm)(a)])])])]),h]),y,(0,e._)("ol",null,[_,(0,e._)("li",null,[(0,e._)("p",null,[A,(0,e._)("strong",null,[(0,e._)("a",x,[v,(0,e.Wm)(a)])])])]),R]),f,(0,e._)("p",null,[E,(0,e._)("strong",null,[(0,e._)("a",X,[q,(0,e.Wm)(a)])]),U,(0,e._)("strong",null,[(0,e._)("a",T,[Y,(0,e.Wm)(a)])]),j,w,N]),P,(0,e._)("p",null,[S,(0,e._)("strong",null,[(0,e._)("a",B,[M,(0,e.Wm)(a)])])]),K],64)}}}}]);