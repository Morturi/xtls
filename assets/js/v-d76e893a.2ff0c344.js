"use strict";(self.webpackChunkXray_docs_next=self.webpackChunkXray_docs_next||[]).push([[8800],{82809:(o,e,n)=>{n.r(e),n.d(e,{data:()=>t});const t={key:"v-d76e893a",path:"/config/outbounds/freedom.html",title:"Freedom",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"OutboundConfigurationObject",slug:"outboundconfigurationobject",children:[]}],filePathRelative:"config/outbounds/freedom.md",git:{updatedTime:1704655196e3,contributors:[{name:"JimhHan",email:"50871214+JimhHan@users.noreply.github.com",commits:4},{name:"ちか",email:"88967758+chika0801@users.noreply.github.com",commits:3},{name:"yuhan6665",email:"1588741+yuhan6665@users.noreply.github.com",commits:2},{name:"rootmelo92118",email:"32770959+rootmelo92118@users.noreply.github.com",commits:1}]}}},50116:(o,e,n)=>{n.r(e),n.d(e,{default:()=>so});var t=n(66252);const s=(0,t.uE)('<h1 id="freedom" tabindex="-1"><a class="header-anchor" href="#freedom" aria-hidden="true">#</a> Freedom</h1><p>Freedom 是一个出站协议，可以用来向任意网络发送（正常的） TCP 或 UDP 数据。</p><h2 id="outboundconfigurationobject" tabindex="-1"><a class="header-anchor" href="#outboundconfigurationobject" aria-hidden="true">#</a> OutboundConfigurationObject</h2><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token punctuation">{</span>\n  <span class="token property">&quot;domainStrategy&quot;</span><span class="token operator">:</span> <span class="token string">&quot;AsIs&quot;</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;redirect&quot;</span><span class="token operator">:</span> <span class="token string">&quot;127.0.0.1:3366&quot;</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;userLevel&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;fragment&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token property">&quot;packets&quot;</span><span class="token operator">:</span> <span class="token string">&quot;tlshello&quot;</span><span class="token punctuation">,</span>\n    <span class="token property">&quot;length&quot;</span><span class="token operator">:</span> <span class="token string">&quot;100-200&quot;</span><span class="token punctuation">,</span>\n    <span class="token property">&quot;interval&quot;</span><span class="token operator">:</span> <span class="token string">&quot;10-20&quot;</span> <span class="token comment">// 单位ms</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><blockquote><p><code>domainStrategy</code>: &quot;AsIs&quot;<br> &quot;UseIP&quot; | &quot;UseIPv6v4&quot; | &quot;UseIPv6&quot; | &quot;UseIPv4v6&quot; | &quot;UseIPv4&quot;<br> &quot;ForceIP&quot; | &quot;ForceIPv6v4&quot; | &quot;ForceIPv6&quot; | &quot;ForceIPv4v6&quot; | &quot;ForceIPv4&quot;</p></blockquote><p>Xray-core v1.8.6 新增功能：<br><code>&quot;UseIPv6v4&quot;</code> | <code>&quot;UseIPv4v6&quot;</code><br><code>&quot;ForceIP&quot;</code> | <code>&quot;ForceIPv6v4&quot;</code> | <code>&quot;ForceIPv6&quot;</code> | <code>&quot;ForceIPv4v6&quot;</code> | <code>&quot;ForceIPv4&quot;</code></p><p>若不写此参数，或留空，默认值 <code>&quot;AsIs&quot;</code>。</p><p>当目标地址为域名时，配置相应的值，Freedom 的行为模式如下：</p>',8),c=(0,t._)("li",null,[(0,t._)("code",null,'"AsIs"'),(0,t.Uk)("：Freedom 使用系统 DNS 同时查询 A 和 AAAA 记录获取 IP，向此域名发出连接。IPv4 或 IPv6 优先级由系统控制。")],-1),u=(0,t._)("code",null,'"UseIP"',-1),a=(0,t.Uk)("、"),l=(0,t._)("code",null,'"UseIPv6v4"',-1),r=(0,t.Uk)("、"),p=(0,t._)("code",null,'"UseIPv6"',-1),d=(0,t.Uk)("、"),i=(0,t._)("code",null,'"UseIPv4v6"',-1),q=(0,t.Uk)("、"),k=(0,t._)("code",null,'"UseIPv4"',-1),m=(0,t.Uk)("：使用 Xray-core "),v=(0,t.Uk)("内置 DNS 服务器"),b=(0,t.Uk)(" 查询获取 IP，向此域名发出连接。"),I=(0,t._)("code",null,'"ForceIP"',-1),P=(0,t.Uk)("、"),U=(0,t._)("code",null,'"ForceIPv6v4"',-1),_=(0,t.Uk)("、"),h=(0,t._)("code",null,'"ForceIPv6"',-1),g=(0,t.Uk)("、"),f=(0,t._)("code",null,'"ForceIPv4v6"',-1),F=(0,t.Uk)("、"),y=(0,t._)("code",null,'"ForceIPv4"',-1),A=(0,t.Uk)("：使用 Xray-core "),j=(0,t.Uk)("内置 DNS 服务器"),T=(0,t.Uk)(" 查询获取 IP，向此域名发出连接。"),S=(0,t._)("li",null,[(0,t.Uk)("当使用 "),(0,t._)("code",null,'"UseIP"'),(0,t.Uk)(" 系列值 或 "),(0,t._)("code",null,'"ForceIP"'),(0,t.Uk)(" 系列值时，若没写 "),(0,t._)("code",null,'"dns"'),(0,t.Uk)(" 配置，使用系统 DNS 同时查询 A 和 AAAA 记录获取 IP，向此域名发出连接。")],-1),w={class:"custom-container tip"},C=(0,t._)("p",{class:"custom-container-title"},"TIP 1",-1),x=(0,t.Uk)("当使用 "),D=(0,t._)("code",null,'"UseIP"',-1),N=(0,t.Uk)("、"),L=(0,t._)("code",null,'"ForceIP"',-1),W=(0,t.Uk)(" 模式时，并且 "),X=(0,t.Uk)("出站连接配置"),O=(0,t.Uk)(" 中指定了 "),H=(0,t._)("code",null,"sendThrough",-1),E=(0,t.Uk)(" 时，Freedom 会根据 "),J=(0,t._)("code",null,"sendThrough",-1),R=(0,t.Uk)(" 的值自动判断所需的 IP 类型，IPv4 或 IPv6。"),z=(0,t.uE)('<div class="custom-container tip"><p class="custom-container-title">TIP 2</p><p>当使用 <code>&quot;UseIPv4&quot;</code>、<code>&quot;UseIPv6&quot;</code> 或 <code>&quot;ForceIPv4&quot;</code>、<code>&quot;ForceIPv6&quot;</code> 模式时，Freedom 会只使用对应的 IPv4 或 IPv6 地址。当 <code>sendThrough</code> 指定了不匹配的本地地址时，将导致连接失败。</p></div><div class="custom-container tip"><p class="custom-container-title">TIP 3</p><p><code>&quot;UseIPv4&quot;</code>、<code>&quot;UseIPv6&quot;</code> 和 <code>&quot;ForceIPv4&quot;</code>、<code>&quot;ForceIPv6&quot;</code> 的区别是，前者解析失败了会走 AsIs，后者解析失败了会被 block。这样整个 <code>domainStrategy</code> 都更加灵活了。</p></div><blockquote><p><code>redirect</code>: address_port</p></blockquote><p>Freedom 会强制将所有数据发送到指定地址（而不是 inbound 指定的地址）。</p><p>其值为一个字符串，样例：<code>&quot;127.0.0.1:80&quot;</code>，<code>&quot;:1234&quot;</code>。</p><p>当地址不指定时，如 <code>&quot;:443&quot;</code>，Freedom 不会修改原先的目标地址。 当端口为 <code>0</code> 时，如 <code>&quot;xray.com: 0&quot;</code>，Freedom 不会修改原先的端口。</p><blockquote><p><code>userLevel</code>: number</p></blockquote>',7),Y=(0,t.Uk)("用户等级，连接会使用这个用户等级对应的 "),B=(0,t.Uk)("本地策略"),G=(0,t.Uk)("。"),K=(0,t.Uk)("userLevel 的值, 对应 "),M=(0,t.Uk)("policy"),Q=(0,t.Uk)(" 中 "),V=(0,t._)("code",null,"level",-1),Z=(0,t.Uk)(" 的值。 如不指定, 默认为 0。"),$=(0,t._)("blockquote",null,[(0,t._)("p",null,[(0,t._)("code",null,"fragment"),(0,t.Uk)(": map")])],-1),oo=(0,t._)("p",null,"一些键值对配置项，用于控制发出的 TCP 分片，在某些情况下可以欺骗审查系统，比如绕过 SNI 黑名单。",-1),eo=(0,t._)("p",null,[(0,t._)("code",null,'"packets"'),(0,t.Uk)('：支持两种分片方式 "1-3" 是 TCP 的流切片，应用于客户端第 1 至第 3 次写数据。"tlshello" 是 TLS 握手包切片。')],-1),no=(0,t._)("p",null,[(0,t._)("code",null,'"length"'),(0,t.Uk)("：分片包长 (byte)")],-1),to=(0,t._)("p",null,[(0,t._)("code",null,'"interval"'),(0,t.Uk)("：分片间隔（ms）")],-1),so={render:function(o,e){const n=(0,t.up)("RouterLink");return(0,t.wg)(),(0,t.iD)(t.HY,null,[s,(0,t._)("ul",null,[c,(0,t._)("li",null,[u,a,l,r,p,d,i,q,k,m,(0,t.Wm)(n,{to:"/config/dns.html"},{default:(0,t.w5)((()=>[v])),_:1}),b]),(0,t._)("li",null,[I,P,U,_,h,g,f,F,y,A,(0,t.Wm)(n,{to:"/config/dns.html"},{default:(0,t.w5)((()=>[j])),_:1}),T]),S]),(0,t._)("div",w,[C,(0,t._)("p",null,[x,D,N,L,W,(0,t.Wm)(n,{to:"/config/outbound.html#outboundobject"},{default:(0,t.w5)((()=>[X])),_:1}),O,H,E,J,R])]),z,(0,t._)("p",null,[Y,(0,t.Wm)(n,{to:"/config/policy.html#levelpolicyobject"},{default:(0,t.w5)((()=>[B])),_:1}),G]),(0,t._)("p",null,[K,(0,t.Wm)(n,{to:"/config/policy.html#policyobject"},{default:(0,t.w5)((()=>[M])),_:1}),Q,V,Z]),$,oo,eo,no,to],64)}}}}]);