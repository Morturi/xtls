"use strict";(self.webpackChunkXray_docs_next=self.webpackChunkXray_docs_next||[]).push([[3213],{4603:(o,e,n)=>{n.r(e),n.d(e,{data:()=>l});const l={key:"v-2d2a19d5",path:"/en/config/inbounds/",title:"Inbounds Protocols",lang:"en-US",frontmatter:{},excerpt:"",headers:[{level:2,title:"协议列表",slug:"协议列表",children:[]}],filePathRelative:"en/config/inbounds/README.md",git:{updatedTime:1631879584e3,contributors:[{name:"hmol233",email:"82594500+hmol233@users.noreply.github.com",commits:1},{name:"xqzr",email:"34030394+xqzr@users.noreply.github.com",commits:1}]}}},4265:(o,e,n)=>{n.r(e),n.d(e,{default:()=>D});var l=n(6252);const t=(0,l._)("h1",{id:"inbounds-protocols",tabindex:"-1"},[(0,l._)("a",{class:"header-anchor",href:"#inbounds-protocols","aria-hidden":"true"},"#"),(0,l.Uk)(" Inbounds Protocols")],-1),r=(0,l._)("blockquote",null,[(0,l._)("p",null,"这个章节包含了目前所有可用于 Inbounds 的协议及具体配置细节.")],-1),s=(0,l._)("h2",{id:"协议列表",tabindex:"-1"},[(0,l._)("a",{class:"header-anchor",href:"#协议列表","aria-hidden":"true"},"#"),(0,l.Uk)(" 协议列表")],-1),u=(0,l.Uk)("Dokodemo-door"),a=(0,l._)("p",null,"Dokodemo door（任意门）可以监听一个本地端口，并把所有进入此端口的数据发送至指定服务器的一个端口，从而达到端口映射的效果。",-1),c=(0,l.Uk)("HTTP"),d=(0,l._)("p",null,"HTTP 协议",-1),k=(0,l.Uk)("Socks"),i=(0,l.Uk)("标准 Socks 协议实现，兼容 "),p={href:"http://ftp.icm.edu.pl/packages/socks/socks4/SOCKS4.protocol",target:"_blank",rel:"noopener noreferrer"},_=(0,l.Uk)("Socks 4"),h=(0,l.Uk)("、Socks 4a 和 "),m={href:"http://ftp.icm.edu.pl/packages/socks/socks4/SOCKS4.protocol",target:"_blank",rel:"noopener noreferrer"},f=(0,l.Uk)("Socks 5"),b=(0,l.Uk)("。"),g=(0,l.Uk)("VLESS"),U=(0,l._)("p",null,"VLESS 是一个无状态的轻量传输协议，可以作为 Xray 客户端和服务器之间的桥梁。",-1),w=(0,l.Uk)("VMess"),S=(0,l.Uk)("VMess"),W=(0,l.Uk)(" 是一个加密传输协议，，可以作为 Xray 客户端和服务器之间的桥梁。"),q=(0,l.Uk)("Trojan"),v={href:"https://trojan-gfw.github.io/trojan/protocol",target:"_blank",rel:"noopener noreferrer"},x=(0,l.Uk)("Trojan"),y=(0,l.Uk)(" 协议"),T=(0,l.Uk)("Shadowsocks"),j={href:"https://zh.wikipedia.org/wiki/Shadowsocks",target:"_blank",rel:"noopener noreferrer"},P=(0,l.Uk)("Shadowsocks"),C=(0,l.Uk)(" 协议。"),D={render:function(o,e){const n=(0,l.up)("RouterLink"),D=(0,l.up)("OutboundLink");return(0,l.wg)(),(0,l.iD)(l.HY,null,[t,r,s,(0,l._)("blockquote",null,[(0,l._)("p",null,[(0,l.Wm)(n,{to:"/en/config/inbounds/dokodemo.html"},{default:(0,l.w5)((()=>[u])),_:1})])]),a,(0,l._)("blockquote",null,[(0,l._)("p",null,[(0,l.Wm)(n,{to:"/en/config/inbounds/http.html"},{default:(0,l.w5)((()=>[c])),_:1})])]),d,(0,l._)("blockquote",null,[(0,l._)("p",null,[(0,l.Wm)(n,{to:"/en/config/inbounds/socks.html"},{default:(0,l.w5)((()=>[k])),_:1})])]),(0,l._)("p",null,[i,(0,l._)("a",p,[_,(0,l.Wm)(D)]),h,(0,l._)("a",m,[f,(0,l.Wm)(D)]),b]),(0,l._)("blockquote",null,[(0,l._)("p",null,[(0,l.Wm)(n,{to:"/en/config/inbounds/vless.html"},{default:(0,l.w5)((()=>[g])),_:1})])]),U,(0,l._)("blockquote",null,[(0,l._)("p",null,[(0,l.Wm)(n,{to:"/en/config/inbounds/vmess.html"},{default:(0,l.w5)((()=>[w])),_:1})])]),(0,l._)("p",null,[(0,l.Wm)(n,{to:"/en/config/development/protocols/vmess.html"},{default:(0,l.w5)((()=>[S])),_:1}),W]),(0,l._)("blockquote",null,[(0,l._)("p",null,[(0,l.Wm)(n,{to:"/en/config/inbounds/trojan.html"},{default:(0,l.w5)((()=>[q])),_:1})])]),(0,l._)("p",null,[(0,l._)("a",v,[x,(0,l.Wm)(D)]),y]),(0,l._)("blockquote",null,[(0,l._)("p",null,[(0,l.Wm)(n,{to:"/en/config/inbounds/shadowsocks.html"},{default:(0,l.w5)((()=>[T])),_:1})])]),(0,l._)("p",null,[(0,l._)("a",j,[P,(0,l.Wm)(D)]),C])],64)}}}}]);