"use strict";(self.webpackChunkXray_docs_next=self.webpackChunkXray_docs_next||[]).push([[202],{10420:(e,n,o)=>{o.r(n),o.d(n,{data:()=>s});const s={key:"v-617f0fcf",path:"/en/config/outbounds/freedom.html",title:"Freedom",lang:"en-US",frontmatter:{},excerpt:"",headers:[{level:2,title:"OutboundConfigurationObject",slug:"outboundconfigurationobject",children:[]}],filePathRelative:"en/config/outbounds/freedom.md",git:{updatedTime:1688373323e3,contributors:[{name:"Winston2084",email:"126307318+Winston2084@users.noreply.github.com",commits:1},{name:"hmol233",email:"82594500+hmol233@users.noreply.github.com",commits:1},{name:"yuhan6665",email:"1588741+yuhan6665@users.noreply.github.com",commits:1}]}}},59568:(e,n,o)=>{o.r(n),o.d(n,{default:()=>Y});var s=o(66252);const t=(0,s.uE)('<h1 id="freedom" tabindex="-1"><a class="header-anchor" href="#freedom" aria-hidden="true">#</a> Freedom</h1><p>Freedom is an outbound protocol that can be used to send (normal) TCP or UDP data to any network.</p><h2 id="outboundconfigurationobject" tabindex="-1"><a class="header-anchor" href="#outboundconfigurationobject" aria-hidden="true">#</a> OutboundConfigurationObject</h2><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token punctuation">{</span>\n  <span class="token property">&quot;domainStrategy&quot;</span><span class="token operator">:</span> <span class="token string">&quot;AsIs&quot;</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;redirect&quot;</span><span class="token operator">:</span> <span class="token string">&quot;127.0.0.1:3366&quot;</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;userLevel&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;fragment&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token property">&quot;packets&quot;</span><span class="token operator">:</span> <span class="token string">&quot;tlshello&quot;</span><span class="token punctuation">,</span>\n    <span class="token property">&quot;length&quot;</span><span class="token operator">:</span> <span class="token string">&quot;100-200&quot;</span><span class="token punctuation">,</span>\n    <span class="token property">&quot;interval&quot;</span><span class="token operator">:</span> <span class="token string">&quot;10-20&quot;</span> <span class="token comment">// ms</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><blockquote><p><code>domainStrategy</code>: &quot;AsIs&quot; | &quot;UseIP&quot; | &quot;UseIPv4&quot; | &quot;UseIPv6&quot;</p></blockquote><p>When the destination address is a domain name, configure the corresponding value for Freedom&#39;s behavior:</p>',6),a=(0,s._)("li",null,[(0,s._)("code",null,'"AsIs"'),(0,s.Uk)(": Freedom resolves the domain name using the system DNS server and connects to it.")],-1),l=(0,s._)("code",null,'"UseIP"',-1),u=(0,s.Uk)(", "),c=(0,s._)("code",null,'"UseIPv4"',-1),r=(0,s.Uk)(", and "),i=(0,s._)("code",null,'"UseIPv6"',-1),p=(0,s.Uk)(": Xray resolves the domain name using the built-in "),d=(0,s.Uk)("DNS server"),m=(0,s.Uk)(" and connects to it. The default value is "),h=(0,s._)("code",null,'"AsIs"',-1),k=(0,s.Uk)("."),b={class:"custom-container tip"},f=(0,s._)("p",{class:"custom-container-title"},"TIP 1",-1),g=(0,s.Uk)("When using the "),q=(0,s._)("code",null,'"UseIP"',-1),v=(0,s.Uk)(" mode and the "),U=(0,s._)("code",null,"sendThrough",-1),_=(0,s.Uk)(" field is specified in the "),y=(0,s.Uk)("outbound connection configuration"),I=(0,s.Uk)(", Freedom will automatically determine the required IP type, IPv4 or IPv6, based on the value of "),P=(0,s._)("code",null,"sendThrough",-1),w=(0,s.Uk)("."),T=(0,s.uE)('<div class="custom-container tip"><p class="custom-container-title">TIP 2</p><p>When using the <code>&quot;UseIPv4&quot;</code> or <code>&quot;UseIPv6&quot;</code> mode, Freedom will only use the corresponding IPv4 or IPv6 address. If <code>sendThrough</code> specifies a mismatched local address, the connection will fail.</p></div><blockquote><p><code>redirect</code>: address_port</p></blockquote><p>Freedom will force all data to be sent to the specified address (instead of the address specified in the inbound).</p><p>It is a string value, for example: <code>&quot;127.0.0.1:80&quot;</code>, <code>&quot;:1234&quot;</code>.</p><p>When the address is not specified, such as <code>&quot;:443&quot;</code>, Freedom will not modify the original destination address. When the port is <code>0</code>, such as <code>&quot;xray.com:0&quot;</code>, Freedom will not modify the original port.</p><blockquote><p><code>userLevel</code>: number</p></blockquote>',6),j=(0,s.Uk)("User level. The connection will use the corresponding "),W=(0,s.Uk)("local policy"),F=(0,s.Uk)(" for this user level."),x=(0,s.Uk)("The value of "),C=(0,s._)("code",null,"userLevel",-1),S=(0,s.Uk)(" corresponds to the value of "),A=(0,s._)("code",null,"level",-1),L=(0,s.Uk)(" in the "),D=(0,s.Uk)("policy"),O=(0,s.Uk)(". If not specified, the default value is 0."),N=(0,s._)("blockquote",null,[(0,s._)("p",null,[(0,s._)("code",null,"fragment"),(0,s.Uk)(": map")])],-1),X=(0,s._)("p",null,"A key-value map used to control TCP fragmentation，under some circumstances it can cheat the censor syetem, like bypass a SNI blacklist.",-1),E=(0,s._)("p",null,[(0,s._)("code",null,'"packets"'),(0,s.Uk)('：support two different methods. "1-3" is for segmentation at TCP layer, "tlshello" is for TLS client hello packet fragmentation')],-1),R=(0,s._)("p",null,[(0,s._)("code",null,'"length"'),(0,s.Uk)(": length to make the cut")],-1),H=(0,s._)("p",null,[(0,s._)("code",null,'"interval"'),(0,s.Uk)(": time between fragments（ms）")],-1),Y={render:function(e,n){const o=(0,s.up)("RouterLink");return(0,s.wg)(),(0,s.iD)(s.HY,null,[t,(0,s._)("ul",null,[a,(0,s._)("li",null,[l,u,c,r,i,p,(0,s.Wm)(o,{to:"/en/config/dns.html"},{default:(0,s.w5)((()=>[d])),_:1}),m,h,k])]),(0,s._)("div",b,[f,(0,s._)("p",null,[g,q,v,U,_,(0,s.Wm)(o,{to:"/en/config/outbound.html#outboundobject"},{default:(0,s.w5)((()=>[y])),_:1}),I,P,w])]),T,(0,s._)("p",null,[j,(0,s.Wm)(o,{to:"/en/config/policy.html#levelpolicyobject"},{default:(0,s.w5)((()=>[W])),_:1}),F]),(0,s._)("p",null,[x,C,S,A,L,(0,s.Wm)(o,{to:"/en/config/policy.html#policyobject"},{default:(0,s.w5)((()=>[D])),_:1}),O]),N,X,E,R,H],64)}}}}]);