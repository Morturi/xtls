"use strict";(self.webpackChunkXray_docs_next=self.webpackChunkXray_docs_next||[]).push([[8551],{54457:(e,o,n)=>{n.r(o),n.d(o,{data:()=>t});const t={key:"v-72afc2d2",path:"/en/config/inbounds/dokodemo.html",title:"Dokodemo-Door",lang:"en-US",frontmatter:{},excerpt:"",headers:[{level:2,title:"InboundConfigurationObject",slug:"inboundconfigurationobject",children:[]},{level:2,title:"Transparent Proxy Configuration Example",slug:"transparent-proxy-configuration-example",children:[]}],filePathRelative:"en/config/inbounds/dokodemo.md",git:{updatedTime:1686752227e3,contributors:[{name:"Winston2084",email:"126307318+Winston2084@users.noreply.github.com",commits:1},{name:"hmol233",email:"82594500+hmol233@users.noreply.github.com",commits:1}]}}},61741:(e,o,n)=>{n.r(o),n.d(o,{default:()=>x});var t=n(66252);const a=(0,t.uE)('<h1 id="dokodemo-door" tabindex="-1"><a class="header-anchor" href="#dokodemo-door" aria-hidden="true">#</a> Dokodemo-Door</h1><p>Dokodemo door (Anywhere Door) can listen to a local port and forward all incoming data on this port to a specified server&#39;s port, achieving the effect of port mapping.</p><h2 id="inboundconfigurationobject" tabindex="-1"><a class="header-anchor" href="#inboundconfigurationobject" aria-hidden="true">#</a> InboundConfigurationObject</h2><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token punctuation">{</span>\n  <span class="token property">&quot;address&quot;</span><span class="token operator">:</span> <span class="token string">&quot;8.8.8.8&quot;</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;port&quot;</span><span class="token operator">:</span> <span class="token number">53</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;network&quot;</span><span class="token operator">:</span> <span class="token string">&quot;tcp&quot;</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;timeout&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;followRedirect&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;userLevel&quot;</span><span class="token operator">:</span> <span class="token number">0</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><blockquote><p><code>address</code>: address</p></blockquote><p>The address to forward the traffic to. It can be an IP address like <code>&quot;1.2.3.4&quot;</code> or a domain name like <code>&quot;xray.com&quot;</code>. It is a string type.</p><p>When <code>followRedirect</code> (see below) is set to <code>true</code>, <code>address</code> can be empty.</p><blockquote><p><code>port</code>: number</p></blockquote><p>The specified port on the destination address to forward the traffic to. It should be in the range 1,655351,65535. It is a numeric value and is a required parameter.</p><blockquote><p><code>network</code>: &quot;tcp&quot; | &quot;udp&quot; | &quot;tcp,udp&quot;</p></blockquote><p>The supported network protocol type. For example, when specified as <code>&quot;tcp&quot;</code>, it will only receive TCP traffic. The default value is <code>&quot;tcp&quot;</code>.</p><blockquote><p><code>timeout</code>: number</p></blockquote><p>The idle timeout in seconds. The default value is <code>300</code>. When handling a connection, if no data is transmitted within the timeout period, the connection will be terminated.</p><blockquote><p><code>followRedirect</code>: true | false</p></blockquote><p>When set to <code>true</code>, dokodemo-door will recognize data forwarded by iptables and forward it to the corresponding destination address.</p>',15),s=(0,t.Uk)("Refer to the "),r=(0,t._)("code",null,"tproxy",-1),p=(0,t.Uk)(" setting in the "),l=(0,t.Uk)("Transport Configuration"),c=(0,t.Uk)(" for more information."),i=(0,t._)("blockquote",null,[(0,t._)("p",null,[(0,t._)("code",null,"userLevel"),(0,t.Uk)(": number")])],-1),u=(0,t.Uk)("The user level that the connection will use to determine the corresponding "),d=(0,t.Uk)("Local Policy"),k=(0,t.Uk)("."),m=(0,t.Uk)("The value of "),h=(0,t._)("code",null,"userLevel",-1),b=(0,t.Uk)(" corresponds to the value of "),f=(0,t._)("code",null,"level",-1),q=(0,t.Uk)(" in the "),g=(0,t.Uk)("policy"),y=(0,t.Uk)(". If not specified, the default value is 0."),v=(0,t._)("h2",{id:"transparent-proxy-configuration-example",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#transparent-proxy-configuration-example","aria-hidden":"true"},"#"),(0,t.Uk)(" Transparent Proxy Configuration Example")],-1),w=(0,t._)("p",null,[(0,t.Uk)("Please refer to the "),(0,t._)("a",{href:"../../document/level-2/tproxy"},"Transparent Proxy (TProxy) Configuration Tutorial"),(0,t.Uk)(" for this section.")],-1),x={render:function(e,o){const n=(0,t.up)("RouterLink");return(0,t.wg)(),(0,t.iD)(t.HY,null,[a,(0,t._)("p",null,[s,r,p,(0,t.Wm)(n,{to:"/en/config/transport.html#sockoptobject"},{default:(0,t.w5)((()=>[l])),_:1}),c]),i,(0,t._)("p",null,[u,(0,t.Wm)(n,{to:"/en/config/policy.html#levelpolicyobject"},{default:(0,t.w5)((()=>[d])),_:1}),k]),(0,t._)("p",null,[m,h,b,f,q,(0,t.Wm)(n,{to:"/en/config/policy.html#policyobject"},{default:(0,t.w5)((()=>[g])),_:1}),y]),v,w],64)}}}}]);