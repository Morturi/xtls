"use strict";(self.webpackChunkXray_docs_next=self.webpackChunkXray_docs_next||[]).push([[2927],{73250:(e,o,t)=>{t.r(o),t.d(o,{data:()=>l});const l={key:"v-f88d343e",path:"/en/development/",title:"Development Guide",lang:"en-US",frontmatter:{},excerpt:"",headers:[{level:2,title:"Compile Documentation",slug:"compile-documentation",children:[]},{level:2,title:"Design Concept",slug:"design-concept",children:[]},{level:2,title:"Development Standards",slug:"development-standards",children:[]},{level:2,title:"Protocol Details",slug:"protocol-details",children:[{level:3,title:"VLESS Protocol",slug:"vless-protocol",children:[]},{level:3,title:"VMess Protocol",slug:"vmess-protocol",children:[]},{level:3,title:"Mux.Cool Protocol",slug:"mux-cool-protocol",children:[]},{level:3,title:"mKCP Protocol",slug:"mkcp-protocol",children:[]}]}],filePathRelative:"en/development/README.md",git:{updatedTime:1684107307e3,contributors:[{name:"Kevin Amiri",email:"amiri990.us@gmail.com",commits:1},{name:"hmol233",email:"82594500+hmol233@users.noreply.github.com",commits:1},{name:"yuhan6665",email:"1588741+yuhan6665@users.noreply.github.com",commits:1}]}}},4186:(e,o,t)=>{t.r(o),t.d(o,{default:()=>B});var l=t(66252);const a=(0,l._)("h1",{id:"development-guide",tabindex:"-1"},[(0,l._)("a",{class:"header-anchor",href:"#development-guide","aria-hidden":"true"},"#"),(0,l.Uk)(" Development Guide")],-1),n=(0,l._)("h2",{id:"compile-documentation",tabindex:"-1"},[(0,l._)("a",{class:"header-anchor",href:"#compile-documentation","aria-hidden":"true"},"#"),(0,l.Uk)(" Compile Documentation")],-1),r=(0,l._)("p",null,"Xray supports multiple platforms, and you can perform cross-compilation on various platforms by yourself.",-1),i=(0,l.Uk)("Please click "),s=(0,l.Uk)("Compile Documentation"),d=(0,l.Uk)(" to view specific compile-related content."),c=(0,l._)("h2",{id:"design-concept",tabindex:"-1"},[(0,l._)("a",{class:"header-anchor",href:"#design-concept","aria-hidden":"true"},"#"),(0,l.Uk)(" Design Concept")],-1),p=(0,l._)("p",null,"Xray kernel provides a platform for secondary development.",-1),m=(0,l._)("p",null,"This section explains the design goals and architecture of Xray.",-1),h=(0,l.Uk)("Please click "),u=(0,l.Uk)("Design Principles"),v=(0,l.Uk)(" to learn about the design goals and architecture of Xray."),g=(0,l._)("h2",{id:"development-standards",tabindex:"-1"},[(0,l._)("a",{class:"header-anchor",href:"#development-standards","aria-hidden":"true"},"#"),(0,l.Uk)(" Development Standards")],-1),k=(0,l._)("p",null,"This section outlines the guidelines to follow when obtaining code, developing, submitting PRs, as well as the relevant coding standards.",-1),_=(0,l.Uk)("Please click "),f=(0,l.Uk)("Development Specification"),b=(0,l.Uk)(" to view the guidelines that should be followed during Xray development."),U=(0,l._)("h2",{id:"protocol-details",tabindex:"-1"},[(0,l._)("a",{class:"header-anchor",href:"#protocol-details","aria-hidden":"true"},"#"),(0,l.Uk)(" Protocol Details")],-1),y=(0,l._)("p",null,"Xray uses many protocols, and you can obtain a detailed description of each protocol through various means.",-1),w={id:"vless-protocol",tabindex:"-1"},x=(0,l._)("a",{class:"header-anchor",href:"#vless-protocol","aria-hidden":"true"},"#",-1),P=(0,l.Uk)(),D=(0,l.Uk)("VLESS Protocol"),C=(0,l._)("p",null,"VLESS is a stateless lightweight transport protocol that can serve as a bridge between Xray clients and servers.",-1),S={id:"vmess-protocol",tabindex:"-1"},X=(0,l._)("a",{class:"header-anchor",href:"#vmess-protocol","aria-hidden":"true"},"#",-1),W=(0,l.Uk)(),M=(0,l.Uk)("VMess Protocol"),V=(0,l._)("p",null,"VMess is an encrypted transport protocol that can act as a bridge between Xray clients and servers.",-1),E={id:"mux-cool-protocol",tabindex:"-1"},K=(0,l._)("a",{class:"header-anchor",href:"#mux-cool-protocol","aria-hidden":"true"},"#",-1),L=(0,l.Uk)(),R=(0,l.Uk)("Mux.Cool Protocol"),T=(0,l._)("p",null,"Mux.Cool protocol is a multiplexing transport protocol used to transmit multiple independent data streams within an established data stream.",-1),A={id:"mkcp-protocol",tabindex:"-1"},G=(0,l._)("a",{class:"header-anchor",href:"#mkcp-protocol","aria-hidden":"true"},"#",-1),H=(0,l.Uk)(),O=(0,l.Uk)("mKCP Protocol"),Y=(0,l.Uk)("mKCP is a stream transmission protocol modified from the "),j={href:"https://github.com/skywind3000/kcp",target:"_blank",rel:"noopener noreferrer"},q=(0,l.Uk)("KCP protocol"),z=(0,l.Uk)(" that can transmit arbitrary data streams in order."),B={render:function(e,o){const t=(0,l.up)("RouterLink"),B=(0,l.up)("OutboundLink");return(0,l.wg)(),(0,l.iD)(l.HY,null,[a,n,r,(0,l._)("p",null,[i,(0,l.Wm)(t,{to:"/en/development/intro/compile.html"},{default:(0,l.w5)((()=>[s])),_:1}),d]),c,p,m,(0,l._)("p",null,[h,(0,l.Wm)(t,{to:"/en/development/intro/design.html"},{default:(0,l.w5)((()=>[u])),_:1}),v]),g,k,(0,l._)("p",null,[_,(0,l.Wm)(t,{to:"/en/development/intro/guide.html"},{default:(0,l.w5)((()=>[f])),_:1}),b]),U,y,(0,l._)("h3",w,[x,P,(0,l.Wm)(t,{to:"/en/development/protocols/vless.html"},{default:(0,l.w5)((()=>[D])),_:1})]),C,(0,l._)("h3",S,[X,W,(0,l.Wm)(t,{to:"/en/development/protocols/vmess.html"},{default:(0,l.w5)((()=>[M])),_:1})]),V,(0,l._)("h3",E,[K,L,(0,l.Wm)(t,{to:"/en/development/protocols/muxcool.html"},{default:(0,l.w5)((()=>[R])),_:1})]),T,(0,l._)("h3",A,[G,H,(0,l.Wm)(t,{to:"/en/development/protocols/mkcp.html"},{default:(0,l.w5)((()=>[O])),_:1})]),(0,l._)("p",null,[Y,(0,l._)("a",j,[q,(0,l.Wm)(B)]),z])],64)}}}}]);