"use strict";(self.webpackChunkXray_docs_next=self.webpackChunkXray_docs_next||[]).push([[3818],{31078:(n,e,a)=>{a.r(e),a.d(e,{data:()=>o});const o={key:"v-3eb3e9c6",path:"/en/config/transports/domainsocket.html",title:"Domain Socket",lang:"en-US",frontmatter:{},excerpt:"",headers:[{level:2,title:"DomainSocketObject",slug:"domainsocketobject",children:[]}],filePathRelative:"en/config/transports/domainsocket.md",git:{updatedTime:1622027153e3,contributors:[{name:"hmol233",email:"82594500+hmol233@users.noreply.github.com",commits:1}]}}},7756:(n,e,a)=>{a.r(e),a.d(e,{default:()=>k});var o=a(66252);const s=(0,o._)("h1",{id:"domain-socket",tabindex:"-1"},[(0,o._)("a",{class:"header-anchor",href:"#domain-socket","aria-hidden":"true"},"#"),(0,o.Uk)(" Domain Socket")],-1),t={class:"custom-container danger"},c=(0,o._)("p",{class:"custom-container-title"},"DANGER",-1),p=(0,o.Uk)("推荐写到 "),i=(0,o.Uk)("inbounds"),l=(0,o.Uk)(" 的 "),d=(0,o._)("code",null,"listen",-1),r=(0,o.Uk)(" 处，传输方式可选 TCP、WebSocket、HTTP/2. 未来这里的 DomainSocket 可能会被弃用。"),u=(0,o.uE)('<p>Domain Socket 使用标准的 Unix domain socket 来传输数据。</p><p>它的优势是使用了操作系统内建的传输通道，而不会占用网络缓存。 理论上相比起本地环回网络（local loopback）来说，Domain socket 速度略快一些。</p><p>目前仅可用于支持 Unix domain socket 的平台，如 Linux 和 macOS。在 Windows 10 Build 17036 前不可用。</p><p>如果指定了 domain socket 作为传输方式，在入站出站代理中配置的端口和 IP 地址将会失效，所有的传输由 domain socket 取代。</p><h2 id="domainsocketobject" tabindex="-1"><a class="header-anchor" href="#domainsocketobject" aria-hidden="true">#</a> DomainSocketObject</h2><p><code>DomainSocketObject</code> 对应传输配置的 <code>dsSettings</code> 项。</p><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token punctuation">{</span>\n  <span class="token property">&quot;path&quot;</span><span class="token operator">:</span> <span class="token string">&quot;/path/to/ds/file&quot;</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;abstract&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;padding&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><blockquote><p><code>path</code>: string</p></blockquote><p>一个合法的文件路径。</p><div class="custom-container danger"><p class="custom-container-title">DANGER</p><p>在运行 Xray 之前，这个文件必须不存在。</p></div><blockquote><p><code>abstract</code>: true | false</p></blockquote><p>是否为 abstract domain socket，默认值 <code>false</code>。</p><blockquote><p><code>padding</code>: true | false</p></blockquote><p>abstract domain socket 是否带 padding，默认值 <code>false</code>。</p>',14),k={render:function(n,e){const a=(0,o.up)("RouterLink");return(0,o.wg)(),(0,o.iD)(o.HY,null,[s,(0,o._)("div",t,[c,(0,o._)("p",null,[p,(0,o.Wm)(a,{to:"/en/config/inbound.html"},{default:(0,o.w5)((()=>[i])),_:1}),l,d,r])]),u],64)}}}}]);