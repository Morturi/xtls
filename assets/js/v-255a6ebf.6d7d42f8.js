"use strict";(self.webpackChunkXray_docs_next=self.webpackChunkXray_docs_next||[]).push([[3091],{16431:(n,e,s)=>{s.r(e),s.d(e,{data:()=>a});const a={key:"v-255a6ebf",path:"/en/config/inbounds/vless.html",title:"VLESS",lang:"en-US",frontmatter:{},excerpt:"",headers:[{level:2,title:"InboundConfigurationObject",slug:"inboundconfigurationobject",children:[{level:3,title:"ClientObject",slug:"clientobject",children:[]}]}],filePathRelative:"en/config/inbounds/vless.md",git:{updatedTime:1686752227e3,contributors:[{name:"yuhan6665",email:"1588741+yuhan6665@users.noreply.github.com",commits:4},{name:"Winston2084",email:"126307318+Winston2084@users.noreply.github.com",commits:1},{name:"hmol233",email:"82594500+hmol233@users.noreply.github.com",commits:1}]}}},25952:(n,e,s)=>{s.r(e),s.d(e,{default:()=>A});var a=s(66252);const o=(0,a._)("h1",{id:"vless",tabindex:"-1"},[(0,a._)("a",{class:"header-anchor",href:"#vless","aria-hidden":"true"},"#"),(0,a.Uk)(" VLESS")],-1),t=(0,a._)("div",{class:"custom-container danger"},[(0,a._)("p",{class:"custom-container-title"},"Danger"),(0,a._)("p",null,"Currently, VLESS does not provide built-in encryption. Please use it with a reliable channel, such as TLS.")],-1),l=(0,a._)("p",null,"VLESS is a stateless lightweight transport protocol that consists of inbound and outbound parts. It can serve as a bridge between Xray clients and servers.",-1),c=(0,a.Uk)("Unlike "),p=(0,a.Uk)("VMess"),r=(0,a.Uk)(", VLESS does not rely on system time. The authentication method is still UUID-based, but it does not require alterId."),i=(0,a.uE)('<h2 id="inboundconfigurationobject" tabindex="-1"><a class="header-anchor" href="#inboundconfigurationobject" aria-hidden="true">#</a> InboundConfigurationObject</h2><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token punctuation">{</span>\n  <span class="token property">&quot;clients&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n    <span class="token punctuation">{</span>\n      <span class="token property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;5783a3e7-e373-51cd-8642-c83782b807c5&quot;</span><span class="token punctuation">,</span>\n      <span class="token property">&quot;level&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>\n      <span class="token property">&quot;email&quot;</span><span class="token operator">:</span> <span class="token string">&quot;love@xray.com&quot;</span><span class="token punctuation">,</span>\n      <span class="token property">&quot;flow&quot;</span><span class="token operator">:</span> <span class="token string">&quot;xtls-rprx-vision&quot;</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;decryption&quot;</span><span class="token operator">:</span> <span class="token string">&quot;none&quot;</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;fallbacks&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n    <span class="token punctuation">{</span>\n      <span class="token property">&quot;dest&quot;</span><span class="token operator">:</span> <span class="token number">80</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">]</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><blockquote><p><code>clients</code>: [ <a href="#clientobject">ClientObject</a> ]</p></blockquote><p>An array representing a group of users approved by the server.</p><p>Each item in the array is a user <a href="#clientobject">ClientObject</a>.</p><blockquote><p><code>decryption</code>: &quot;none&quot;</p></blockquote><p>Currently, you need to specify <code>&quot;none&quot;</code>. It cannot be left empty. If the <code>decryption</code> value is not set correctly, you will receive an error message when using Xray or <code>-test</code>.</p><p>Note that <code>decryption</code> is at the same level as <code>clients</code>. The placement of <code>decryption</code> is different from the <code>encryption</code> in the vmess protocol because if there is a layer of agreed encryption, the server needs to decrypt it first to know which user it belongs to.</p>',8),u=(0,a._)("code",null,"fallbacks",-1),d=(0,a.Uk)(": [ "),b=(0,a.Uk)("FallbackObject"),k=(0,a.Uk)(" ]"),m=(0,a.Uk)("An array that contains a series of powerful fallback configurations (optional). The specific configuration for "),h=(0,a._)("code",null,"fallbacks",-1),f=(0,a.Uk)(" can be found in the "),g=(0,a.Uk)("FallbackObject"),q=(0,a.Uk)(" documentation."),y=(0,a.uE)('<h3 id="clientobject" tabindex="-1"><a class="header-anchor" href="#clientobject" aria-hidden="true">#</a> ClientObject</h3><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token punctuation">{</span>\n  <span class="token property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;5783a3e7-e373-51cd-8642-c83782b807c5&quot;</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;level&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;email&quot;</span><span class="token operator">:</span> <span class="token string">&quot;love@xray.com&quot;</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;flow&quot;</span><span class="token operator">:</span> <span class="token string">&quot;xtls-rprx-vision&quot;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><blockquote><p><code>id</code>: string</p></blockquote><p>The user ID for VLESS. It can be any string less than 30 bytes or a valid UUID. Custom strings and their corresponding UUIDs are equivalent, which means you can use either of the following in the configuration file to identify the same user:</p><ul><li><code>&quot;id&quot;: &quot;ÊàëÁà±üçâËÄÅÂ∏à1314&quot;</code></li><li><code>&quot;id&quot;: &quot;5783a3e7-e373-51cd-8642-c83782b807c5&quot;</code> (This UUID is the mapping of the string &quot;ÊàëÁà± üçâ ËÄÅÂ∏à 1314&quot;)</li></ul>',5),v=(0,a.Uk)("The mapping standard is described in the "),U={href:"https://github.com/XTLS/Xray-core/issues/158",target:"_blank",rel:"noopener noreferrer"},_=(0,a.Uk)("VLESS UUID Mapping Standard: Mapping a Custom String to a UUIDv5"),w=(0,a.Uk)("."),j=(0,a._)("p",null,[(0,a.Uk)("You can use the command "),(0,a._)("code",null,'xray uuid -i "custom string"'),(0,a.Uk)(" to generate the UUID corresponding to a custom string.")],-1),S=(0,a._)("blockquote",null,[(0,a._)("p",null,[(0,a.Uk)("You can also use the command "),(0,a._)("code",null,"xray uuid"),(0,a.Uk)(" to generate a random UUID.")])],-1),x=(0,a._)("blockquote",null,[(0,a._)("p",null,[(0,a._)("code",null,"level"),(0,a.Uk)(": number")])],-1),I=(0,a.Uk)("The user level that the connection will use to determine the corresponding "),L=(0,a.Uk)("Local Policy"),T=(0,a.Uk)("."),C=(0,a.Uk)("The value of "),D=(0,a._)("code",null,"level",-1),E=(0,a.Uk)(" corresponds to the value of "),O=(0,a._)("code",null,"level",-1),X=(0,a.Uk)(" in the "),V=(0,a.Uk)("policy"),W=(0,a.Uk)(". If not specified, the default value is 0."),P=(0,a.uE)("<blockquote><p><code>email</code>: string</p></blockquote><p>User email address used to differentiate traffic from different users (reflected in logs and statistics).</p><blockquote><p><code>flow</code>: string</p></blockquote><p>Flow control mode used to select the XTLS algorithm.</p><p>Currently, the following flow control modes are available for inbound protocols:</p><ul><li>No <code>flow</code>, empty string, or <code>none</code>: Use regular TLS proxy.</li><li><code>xtls-rprx-vision</code>: Use the new XTLS mode, including inner-handshake random padding.</li></ul><p>Additionally, XTLS currently only supports TCP, mKCP, and DomainSocket as transport methods.</p>",7),A={render:function(n,e){const s=(0,a.up)("RouterLink"),A=(0,a.up)("OutboundLink");return(0,a.wg)(),(0,a.iD)(a.HY,null,[o,t,l,(0,a._)("p",null,[c,(0,a.Wm)(s,{to:"/en/config/inbounds/vmess.html"},{default:(0,a.w5)((()=>[p])),_:1}),r]),i,(0,a._)("blockquote",null,[(0,a._)("p",null,[u,d,(0,a.Wm)(s,{to:"/en/config/features/fallback.html"},{default:(0,a.w5)((()=>[b])),_:1}),k])]),(0,a._)("p",null,[m,h,f,(0,a.Wm)(s,{to:"/en/config/features/fallback.html#fallbacks-configuration"},{default:(0,a.w5)((()=>[g])),_:1}),q]),y,(0,a._)("p",null,[v,(0,a._)("a",U,[_,(0,a.Wm)(A)]),w]),j,S,x,(0,a._)("p",null,[I,(0,a.Wm)(s,{to:"/en/config/policy.html#levelpolicyobject"},{default:(0,a.w5)((()=>[L])),_:1}),T]),(0,a._)("p",null,[C,D,E,O,X,(0,a.Wm)(s,{to:"/en/config/policy.html#policyobject"},{default:(0,a.w5)((()=>[V])),_:1}),W]),P],64)}}}}]);