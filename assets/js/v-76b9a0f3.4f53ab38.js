"use strict";(self.webpackChunkXray_docs_next=self.webpackChunkXray_docs_next||[]).push([[788],{70357:(e,a,n)=>{n.r(a),n.d(a,{data:()=>o});const o={key:"v-76b9a0f3",path:"/en/config/features/browser_dialer.html",title:"Browser Dialer",lang:"en-US",frontmatter:{},excerpt:"",headers:[{level:2,title:"Background",slug:"background",children:[]},{level:2,title:"Xray & JS",slug:"xray-js",children:[]},{level:2,title:"Early data",slug:"early-data",children:[]},{level:2,title:"Configuration",slug:"configuration",children:[]}],filePathRelative:"en/config/features/browser_dialer.md",git:{updatedTime:1680362439e3,contributors:[{name:"picklefan",email:"34882095+picklefan@users.noreply.github.com",commits:1},{name:"yuhan6665",email:"1588741+yuhan6665@users.noreply.github.com",commits:1}]}}},6511:(e,a,n)=>{n.r(a),n.d(a,{default:()=>H});var o=n(66252);const r=(0,o._)("h1",{id:"browser-dialer",tabindex:"-1"},[(0,o._)("a",{class:"header-anchor",href:"#browser-dialer","aria-hidden":"true"},"#"),(0,o.Uk)(" Browser Dialer")],-1),t=(0,o.Uk)(),i=(0,o._)("h2",{id:"background",tabindex:"-1"},[(0,o._)("a",{class:"header-anchor",href:"#background","aria-hidden":"true"},"#"),(0,o.Uk)(" Background")],-1),s=(0,o.Uk)("Based on "),l={href:"https://github.com/v2ray/discussion/issues/754#issuecomment-647934994",target:"_blank",rel:"noopener noreferrer"},c=(0,o.Uk)("an idea from 2020"),d=(0,o.Uk)(", a concise "),h=(0,o._)("code",null,"WSS Browser Dialer",-1),u=(0,o.Uk)(" has been implemented using native "),f=(0,o._)("code",null,"JS",-1),b=(0,o.Uk)(", achieving true browser TLS fingerprints and behavioral characteristics. However, "),m=(0,o._)("code",null,"WSS",-1),g=(0,o.Uk)(" still has significant issues with "),y=(0,o._)("code",null,"ALPN",-1),p=(0,o.Uk)(", so the next step is to forward "),k=(0,o._)("code",null,"HTTP/2",-1),w=(0,o.Uk)(" and "),_=(0,o._)("code",null,"QUIC",-1),v=(0,o.Uk)(' through the browser."'),U=(0,o.uE)('<h2 id="xray-js" tabindex="-1"><a class="header-anchor" href="#xray-js" aria-hidden="true">#</a> Xray &amp; JS</h2><p>A very simple and clever communication mechanism has been createdï¼š</p><ul><li>Xray listens on address port <code>A</code> as an <code>HTTP</code> service, and the browser accesses <code>A</code> to load the <code>JS</code> in the webpage.</li><li>The <code>JS</code> actively establishes a WebSocket connection to <code>A</code>. After a successful connection, Xray sends the connection to the channel.</li><li>When a connection needs to be established, Xray receives an available connection from the channel and sends the target URL and optional early data.</li><li>Once the <code>JS</code> successfully connects to the target, it informs Xray and continues to use this conn to bi-directionally forward data. Connection closing behavior is synchronized.</li><li>After the connection is used, it will be closed, but the JS ensures that there is always a new idle connection available.&quot;</li></ul><h2 id="early-data" tabindex="-1"><a class="header-anchor" href="#early-data" aria-hidden="true">#</a> Early data</h2><p>According to the browser&#39;s needs, the early data mechanism has been adjusted as follows:</p>',5),S=(0,o._)("li",null,[(0,o.Uk)("The server response header will contain the requested "),(0,o._)("code",null,"Sec-WebSocket-Protocol"),(0,o.Uk)(", which also initially obfuscates the length characteristic of the WSS handshake response.")],-1),x=(0,o._)("li",null,[(0,o.Uk)("The encoding used for early data for browsers is "),(0,o._)("code",null,"base64.RawURLEncoding"),(0,o.Uk)(" instead of "),(0,o._)("code",null,"StdEncoding"),(0,o.Uk)(", and the server has made it compatible.")],-1),X=(0,o.Uk)("In addition, due to "),W={href:"https://github.com/XTLS/Xray-core/pull/375",target:"_blank",rel:"noopener noreferrer"},T=(0,o.Uk)("Xray-core#375"),A=(0,o.Uk)(" recommendations for "),B=(0,o._)("code",null,"?ed=2048",-1),E=(0,o.Uk)(", this PR also increased server "),R=(0,o._)("code",null,"MaxHeaderBytes",-1),C=(0,o.Uk)(" by 4096. "),P=(0,o._)("s",null,"(Although it seems like it would work without modification.)",-1),J={id:"configuration",tabindex:"-1"},L=(0,o._)("a",{class:"header-anchor",href:"#configuration","aria-hidden":"true"},"#",-1),D=(0,o.Uk)(" Configuration "),I=(0,o.uE)("<p>This is an exploratory process, and the configuration method used when both sides are Xray-core v1.4.1 is as follows:</p><ul><li>Prepare a usable WSS configuration, making sure to fill in the domain name for the address. If you need to specify an IP address, configure DNS or system hosts.</li><li>If browser traffic will also pass through Xray-core, be sure to set this domain name as a direct connection, otherwise it will cause traffic looping.</li><li>Set the environment variable to specify the address port to listen on, such as <code>XRAY_BROWSER_DIALER = 127.0.0.1:8080</code>.</li><li>First run Xray-core, then use any browser to access the specified address port, and you can also check <code>Console</code> and Network with <code>F12</code>.</li><li>The browser will limit the number of WebSocket connections, so it is recommended to enable <code>Mux.Cool</code>.</li></ul>",2),H={render:function(e,a){const n=(0,o.up)("Badge"),H=(0,o.up)("OutboundLink");return(0,o.wg)(),(0,o.iD)(o.HY,null,[r,(0,o.Wm)(n,{text:"BETA",type:"warning"}),t,(0,o.Wm)(n,{text:"v1.4.1+",type:"warning"}),i,(0,o._)("p",null,[s,(0,o._)("a",l,[c,(0,o.Wm)(H)]),d,h,u,f,b,m,g,y,p,k,w,_,v]),U,(0,o._)("ul",null,[S,x,(0,o._)("li",null,[X,(0,o._)("a",W,[T,(0,o.Wm)(H)]),A,B,E,R,C,P])]),(0,o._)("h2",J,[L,D,(0,o.Wm)(n,{text:"v1.4.1",type:"warning"})]),I],64)}}}}]);