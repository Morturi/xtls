"use strict";(self.webpackChunkXray_docs_next=self.webpackChunkXray_docs_next||[]).push([[4507],{13312:(e,n,t)=>{t.r(n),t.d(n,{data:()=>s});const s={key:"v-1c38292a",path:"/en/config/transports/h2.html",title:"HTTP/2",lang:"en-US",frontmatter:{},excerpt:"",headers:[{level:2,title:"HttpObject",slug:"httpobject",children:[]}],filePathRelative:"en/config/transports/h2.md",git:{updatedTime:1679971439e3,contributors:[{name:"hmol233",email:"82594500+hmol233@users.noreply.github.com",commits:1},{name:"picklefan",email:"34882095+picklefan@users.noreply.github.com",commits:1},{name:"yuhan6665",email:"1588741+yuhan6665@users.noreply.github.com",commits:1}]}}},46848:(e,n,t)=>{t.r(n),t.d(n,{default:()=>T});var s=t(66252);const a=(0,s.uE)('<h1 id="http-2" tabindex="-1"><a class="header-anchor" href="#http-2" aria-hidden="true">#</a> HTTP/2</h1><p>The transmission mode based on HTTP/2 fully implements the HTTP/2 standard and can be relayed by other HTTP servers (such as Nginx).</p><p>Based on the recommendations of HTTP/2, both the client and server must enable TLS to use this transmission mode normally.</p><p>HTTP/2 has built-in multiplexing, so it is not recommended to enable mux.cool when using HTTP/2.</p><div class="custom-container tip"><p class="custom-container-title">Tip</p><p>The current version of the transmission mode based on HTTP/2 does not require TLS configuration for inbound (server-side).</p><p>This makes it possible to use a plaintext HTTP/2 protocol called h2c for communication between the gateway and Xray, with external gateway components handling the TLS layer conversation in special-purpose load-balancing deployment environments.</p></div><div class="custom-container warning"><p class="custom-container-title">Warning</p><p>⚠️ If you are using fallback, please note the following:</p><ul><li>Please make sure that <code>h2</code> is included in <code>(x)tlsSettings.alpn</code>, otherwise HTTP/2 cannot complete TLS handshake.</li><li>HTTP/2 cannot perform path-based routing, so it is recommended to use SNI-based routing.</li></ul></div><h2 id="httpobject" tabindex="-1"><a class="header-anchor" href="#httpobject" aria-hidden="true">#</a> HttpObject</h2>',7),o=(0,s._)("code",null,"HttpObject",-1),p=(0,s.Uk)(" corresponds to the "),r=(0,s._)("code",null,"httpSettings",-1),c=(0,s.Uk)(" in the "),i=(0,s.Uk)("Transport Protocol"),l=(0,s.Uk)(","),u=(0,s.uE)('<div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token punctuation">{</span>\n  <span class="token property">&quot;host&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;xray.com&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;path&quot;</span><span class="token operator">:</span> <span class="token string">&quot;/random/path&quot;</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;read_idle_timeout&quot;</span><span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;health_check_timeout&quot;</span><span class="token operator">:</span> <span class="token number">15</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;method&quot;</span><span class="token operator">:</span> <span class="token string">&quot;PUT&quot;</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;headers&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token property">&quot;Header&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;value&quot;</span><span class="token punctuation">]</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><blockquote><p><code>host</code>: [string]</p></blockquote><p>A string array, where each element is a domain name.</p><p>The client will randomly select a domain name from the list for communication, and the server will verify whether the domain name is in the list.</p><blockquote><p><code>path</code>: string</p></blockquote><p>The HTTP path starts with <code>/</code> and must be the same value between the client and server.</p><p>The default value is <code>/</code></p><blockquote><p><code>read_idle_timeout</code>: number</p></blockquote><p>The connection health check is performed when no data has been received for a certain period of time, measured in seconds.</p><p>By default, the health check is <strong>disabled</strong>.</p><div class="custom-container tip"><p class="custom-container-title">Tip</p><p><strong>Only need to be configured</strong> in <strong><code>outbound</code></strong> (<strong>client</strong>).</p></div><div class="custom-container tip"><p class="custom-container-title">Tip</p><p>Enabling health checks may help solve some &quot;connection drop&quot; issues.</p></div><blockquote><p><code>health_check_timeout</code>: number</p></blockquote><p>The timeout for the health check, measured in seconds. If the health check is not completed within this time period, it is considered to have failed. The default value is <code>15</code></p><div class="custom-container tip"><p class="custom-container-title">Tip</p><p><strong>Only need to be configured</strong> in <code>outbound</code> <strong>(client)</strong>.</p></div><blockquote><p><code>method</code>: string</p></blockquote><p>HTTP request method. The default value is <code>PUT</code></p>',17),d=(0,s.Uk)("Please refer this "),h={href:"https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods",target:"_blank",rel:"noopener noreferrer"},m=(0,s.Uk)("this"),b=(0,s.Uk)(" when configure."),k=(0,s._)("blockquote",null,[(0,s._)("p",null,[(0,s._)("code",null,"headers"),(0,s.Uk)(": map{ string: [string] }")])],-1),g=(0,s._)("p",null,"Custom HTTP headers, defined as key-value pairs. Each key represents an HTTP header name and its corresponding value is an array.",-1),T={render:function(e,n){const t=(0,s.up)("RouterLink"),T=(0,s.up)("OutboundLink");return(0,s.wg)(),(0,s.iD)(s.HY,null,[a,(0,s._)("p",null,[o,p,r,c,(0,s.Wm)(t,{to:"/en/config/transport.html"},{default:(0,s.w5)((()=>[i])),_:1}),l]),u,(0,s._)("p",null,[d,(0,s._)("a",h,[m,(0,s.Wm)(T)]),b]),k,g],64)}}}}]);