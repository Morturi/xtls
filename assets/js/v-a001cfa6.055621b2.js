"use strict";(self.webpackChunkXray_docs_next=self.webpackChunkXray_docs_next||[]).push([[1941],{76939:(n,s,e)=>{e.r(s),e.d(s,{data:()=>a});const a={key:"v-a001cfa6",path:"/document/level-2/nginx_or_haproxy_tls_tunnel.html",title:"Nginx 或 Haproxy 搭建 TLS 隧道隐藏指纹",lang:"zh-CN",frontmatter:{title:"Nginx 或 Haproxy 搭建 TLS 隧道隐藏指纹"},excerpt:"",headers:[{level:2,title:"编译 nginx --with-stream",slug:"编译-nginx-with-stream",children:[]},{level:2,title:"配置 nginx",slug:"配置-nginx",children:[]},{level:2,title:"xray 配置",slug:"xray-配置",children:[]},{level:2,title:"客户端及服务端启动服务",slug:"客户端及服务端启动服务",children:[]},{level:2,title:"结束",slug:"结束",children:[]},{level:2,title:"HTTPS 隧道",slug:"https-隧道",children:[{level:3,title:"haproxy_client 配置 (运行前去掉注释)",slug:"haproxy-client-配置-运行前去掉注释",children:[]},{level:3,title:"haproxy_server 配置 (运行前去掉注释)",slug:"haproxy-server-配置-运行前去掉注释",children:[]},{level:3,title:"xray 配置",slug:"xray-配置-1",children:[]}]},{level:2,title:"WebSocket over HTTP/2",slug:"websocket-over-http-2",children:[{level:3,title:"haproxy_client 配置",slug:"haproxy-client-配置",children:[]},{level:3,title:"haproxy_server 配置",slug:"haproxy-server-配置",children:[]},{level:3,title:"xray 配置",slug:"xray-配置-2",children:[]}]},{level:2,title:"gRPC over HTTP/2",slug:"grpc-over-http-2",children:[{level:3,title:"haproxy_client 配置",slug:"haproxy-client-配置-1",children:[]},{level:3,title:"haproxy_server 配置",slug:"haproxy-server-配置-1",children:[]},{level:3,title:"xray 配置",slug:"xray-配置-3",children:[]},{level:3,title:"haproxy_client 配置",slug:"haproxy-client-配置-2",children:[]},{level:3,title:"haproxy_server 配置",slug:"haproxy-server-配置-2",children:[]},{level:3,title:"xray 配置",slug:"xray-配置-4",children:[]}]}],filePathRelative:"document/level-2/nginx_or_haproxy_tls_tunnel.md",git:{updatedTime:1679535767e3,contributors:[{name:"SQLimit",email:"110686480+SQLimit@users.noreply.github.com",commits:1}]}}},57945:(n,s,e)=>{e.r(s),e.d(s,{default:()=>u});var a=e(66252);const r=(0,a.uE)('<p>Nginx 或 Haproxy 实现的 HTTPS 隧道、HTTP/2 over HTTPS 隧道、WebSocket over HTTP/2 over HTTPS 隧道、gRPC over HTTP/2 over HTTPS 隧道以及自签证书双端认证的 gRPC over HTTP/2 over HTTPS 隧道</p><h1 id="客户端服务端-nginx-构建-htpps-隧道隐藏指纹" tabindex="-1"><a class="header-anchor" href="#客户端服务端-nginx-构建-htpps-隧道隐藏指纹" aria-hidden="true">#</a> 客户端服务端 Nginx 构建 HTPPS 隧道隐藏指纹</h1><p>网路结构：</p><p>xray_client ---tcp--- nginx_client ---HTTPS--- nginx_sever ---tcp--- xray_server</p><h2 id="编译-nginx-with-stream" tabindex="-1"><a class="header-anchor" href="#编译-nginx-with-stream" aria-hidden="true">#</a> 编译 nginx --with-stream</h2><p>在客户端及服务端均编译</p><p><code>curl -O -L http://nginx.org/download/nginx-1.22.1.tar.gz</code></p><p><code>tar -zxvf nginx-1.22.1.tar.gz</code></p><p><code>cd nginx-1.22.1</code></p><p><code>apt install gcc make</code> //编译依赖 gcc 以及 make</p><p><code>./configure --prefix=/usr/local/nginx --with-http_ssl_module --with-http_v2_module --with-stream --with-stream_ssl_module</code> //此步需要依赖一些库，根据报错安装相应 lib</p><p><code>make &amp;&amp; make install</code></p><p>编译之后 nginx 文件夹位于 <code>/usr/local/nginx</code></p><h2 id="配置-nginx" tabindex="-1"><a class="header-anchor" href="#配置-nginx" aria-hidden="true">#</a> 配置 nginx</h2><p>编辑 nginx 配置文件 nginx.conf</p><p><code>vim /usr/local/nginx/conf/nginx.conf</code></p><p>服务端加入如下配置</p>',17),l=(0,a.Uk)("服务器申请证书不再赘述，参考"),p={href:"https://xtls.github.io/document/level-0/ch06-certificates.html",target:"_blank",rel:"noopener noreferrer"},t=(0,a.Uk)("白话文"),b=(0,a.uE)('<div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>stream {\n    server {\n        listen 443 ssl;\n        listen [::]:443 ssl;\n        ssl_protocols TLSv1.3;\n        ssl_certificate /path/to/cert/domain.crt; # crt 文件位置\n        ssl_certificate_key /path/to/cert/domain.key; # key 文件位置\n        proxy_pass unix:/dev/shm/vless.sock; # 使用 domain socket\n    }\n}\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><div class="custom-container warning"><p class="custom-container-title">注意</p><p>stream 部分与 http 模块并列，客户端可删除 http 部分，服务端可删除或搭建网页伪装回落</p></div><p>客户端加入如下配置</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>stream {\n    server {\n        listen 6666;\n        listen [::]:6666;\n        proxy_ssl on;\n        proxy_ssl_protocols TLSv1.3;\n        proxy_ssl_server_name on;\n        proxy_ssl_name yourdomain.domain; # 服务器域名\n        proxy_pass ip:443; # 服务器 ip 形如 proxy_pass 6.6.6.6:443; 或 proxy_pass [2401:0:0::1]:443;\n    }\n}\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>在 <code>/etc/systemd/system</code> 文件夹中创建 <code>nginx.service</code> 文件</p><p><code>vim /etc/systemd/system/nginx.service</code></p><p>写入如下</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>[Unit]\nDescription=The NGINX HTTP and reverse proxy server\nAfter=syslog.target network-online.target remote-fs.target nss-lookup.target\nAfter=xray.service\n\n[Service]\nType=forking\nExecStartPre=/usr/local/nginx/sbin/nginx -t\nExecStart=/usr/local/nginx/sbin/nginx\nExecReload=/usr/local/nginx/sbin/nginx -s reload\nExecStop=/bin/kill -s QUIT $MAINPID\nPrivateTmp=true\n\n[Install]\nWantedBy=multi-user.target\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><p>加入开机自启</p><p><code>systemctl enable nginx</code></p><h2 id="xray-配置" tabindex="-1"><a class="header-anchor" href="#xray-配置" aria-hidden="true">#</a> xray 配置</h2><p>服务端 xray 配置</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>{\n\t&quot;log&quot;: {\n\t\t&quot;loglevel&quot;: &quot;none&quot;\n\t},\n\t&quot;inbounds&quot;: [\n\t\t{\n\t\t\t&quot;listen&quot;: &quot;/dev/shm/vless.sock,0666&quot;,\n\t\t\t&quot;protocol&quot;: &quot;vless&quot;,\n\t\t\t&quot;settings&quot;: {\n\t\t\t\t&quot;clients&quot;: [\n\t\t\t\t\t{\n\t\t\t\t\t\t&quot;id&quot;: &quot;uuid&quot;\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t&quot;decryption&quot;: &quot;none&quot;\n\t\t\t},\n\t\t\t&quot;streamSettings&quot;: {\n\t\t\t\t&quot;network&quot;: &quot;tcp&quot;\n\t\t\t},\n\t\t\t&quot;sniffing&quot;: {\n\t\t\t\t&quot;enabled&quot;: true,\n\t\t\t\t&quot;destOverride&quot;: [\n\t\t\t\t\t&quot;http&quot;,\n\t\t\t\t\t&quot;tls&quot;\n\t\t\t\t]\n\t\t\t}\n\t\t}\n\t],\n\t&quot;outbounds&quot;: [\n\t\t{\n\t\t\t&quot;protocol&quot;: &quot;freedom&quot;\n\t\t}\n\t]\n}\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br></div></div><p>客户端 xray 配置，此处以旁路由透明代理为例</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>{\n    &quot;log&quot;: {\n        &quot;loglevel&quot;: &quot;none&quot;\n    },\n    &quot;dns&quot;: {\n        &quot;servers&quot;: [\n            &quot;1.1.1.1&quot;,\n            {\n                &quot;address&quot;: &quot;119.29.29.29&quot;,\n                &quot;domains&quot;: [\n                    &quot;geosite:cn&quot;\n                ],\n                &quot;expectIP&quot;: [\n                    &quot;geoip:cn&quot;\n                ]\n            }\n        ],\n        &quot;disableFallback&quot;: true,\n        &quot;disableFallbackIfMatch&quot;: true\n    },\n    &quot;inbounds&quot;: [\n        {\n            &quot;tag&quot;: &quot;tproxy-in&quot;,\n            &quot;port&quot;: 12345,\n            &quot;protocol&quot;: &quot;dokodemo-door&quot;,\n            &quot;settings&quot;: {\n                &quot;network&quot;: &quot;tcp,udp&quot;,\n                &quot;followRedirect&quot;: true\n            },\n            &quot;sniffing&quot;: {\n                &quot;enabled&quot;: true,\n                &quot;destOverride&quot;: [\n                    &quot;http&quot;,\n                    &quot;tls&quot;\n                ]\n            },\n            &quot;streamSettings&quot;: {\n                &quot;sockopt&quot;: {\n                    &quot;tproxy&quot;: &quot;tproxy&quot;,\n                    &quot;mark&quot;: 255\n                }\n            }\n        },\n        {\n            &quot;tag&quot;: &quot;http&quot;,\n            &quot;port&quot;: 10808,\n            &quot;listen&quot;: &quot;127.0.0.1&quot;,\n            &quot;protocol&quot;: &quot;http&quot;,\n            &quot;sniffing&quot;: {\n                &quot;enabled&quot;: true,\n                &quot;destOverride&quot;: [\n                    &quot;http&quot;,\n                    &quot;tls&quot;\n                ]\n            }\n        }\n    ],\n    &quot;outbounds&quot;: [\n        {\n            &quot;tag&quot;: &quot;nginxtls&quot;,\n            &quot;protocol&quot;: &quot;vless&quot;,\n            &quot;settings&quot;: {\n                &quot;vnext&quot;: [\n                    {\n                        &quot;address&quot;: &quot;127.0.0.1&quot;,\n                        &quot;port&quot;: 6666,\n                        &quot;users&quot;: [\n                            {\n                                &quot;id&quot;: &quot;uuid&quot;,\n                                &quot;encryption&quot;: &quot;none&quot;\n                            }\n                        ]\n                    }\n                ]\n            },\n            &quot;streamSettings&quot;: {\n                &quot;sockopt&quot;: {\n                    &quot;mark&quot;: 255\n                },\n                &quot;network&quot;: &quot;tcp&quot;\n            }\n        },\n        {\n            &quot;tag&quot;: &quot;direct&quot;,\n            &quot;protocol&quot;: &quot;freedom&quot;,\n            &quot;streamSettings&quot;: {\n                &quot;sockopt&quot;: {\n                    &quot;mark&quot;: 255\n                }\n            }\n        },\n        {\n            &quot;tag&quot;: &quot;block&quot;,\n            &quot;protocol&quot;: &quot;blackhole&quot;,\n            &quot;settings&quot;: {\n                &quot;response&quot;: {\n                    &quot;type&quot;: &quot;http&quot;\n                }\n            }\n        }\n    ],\n    &quot;routing&quot;: {\n        &quot;domainMatcher&quot;: &quot;mph&quot;,\n        &quot;domainStrategy&quot;: &quot;AsIs&quot;,\n        &quot;rules&quot;: [\n            {\n                &quot;type&quot;: &quot;field&quot;,\n                &quot;domain&quot;: [\n                    &quot;geosite:category-ads-all&quot;\n                ],\n                &quot;outboundTag&quot;: &quot;block&quot;\n            },\n            {\n                &quot;type&quot;: &quot;field&quot;,\n                &quot;port&quot;: 123,\n                &quot;network&quot;: &quot;udp&quot;,\n                &quot;outboundTag&quot;: &quot;direct&quot;\n            },\n            {\n                &quot;type&quot;: &quot;field&quot;,\n                &quot;ip&quot;: [\n                    &quot;1.1.1.1&quot;\n                ],\n                &quot;outboundTag&quot;: &quot;proxy&quot;\n            },\n            {\n                &quot;type&quot;: &quot;field&quot;,\n                &quot;domain&quot;: [\n                    &quot;geosite:cn&quot;\n                ],\n                &quot;outboundTag&quot;: &quot;direct&quot;\n            },\n            {\n                &quot;type&quot;: &quot;field&quot;,\n                &quot;protocol&quot;: [\n                    &quot;bittorrent&quot;\n                ],\n                &quot;outboundTag&quot;: &quot;direct&quot;\n            },\n            {\n                &quot;type&quot;: &quot;field&quot;,\n                &quot;ip&quot;: [\n                    &quot;geoip:private&quot;\n                ],\n                &quot;outboundTag&quot;: &quot;direct&quot;\n            },\n            {\n                &quot;type&quot;: &quot;field&quot;,\n                &quot;inboundTag&quot;: [\n                    &quot;tproxy-in&quot;\n                ],\n                &quot;outboundTag&quot;: &quot;nginxtls&quot;\n            }\n        ]\n    }\n}\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br><span class="line-number">97</span><br><span class="line-number">98</span><br><span class="line-number">99</span><br><span class="line-number">100</span><br><span class="line-number">101</span><br><span class="line-number">102</span><br><span class="line-number">103</span><br><span class="line-number">104</span><br><span class="line-number">105</span><br><span class="line-number">106</span><br><span class="line-number">107</span><br><span class="line-number">108</span><br><span class="line-number">109</span><br><span class="line-number">110</span><br><span class="line-number">111</span><br><span class="line-number">112</span><br><span class="line-number">113</span><br><span class="line-number">114</span><br><span class="line-number">115</span><br><span class="line-number">116</span><br><span class="line-number">117</span><br><span class="line-number">118</span><br><span class="line-number">119</span><br><span class="line-number">120</span><br><span class="line-number">121</span><br><span class="line-number">122</span><br><span class="line-number">123</span><br><span class="line-number">124</span><br><span class="line-number">125</span><br><span class="line-number">126</span><br><span class="line-number">127</span><br><span class="line-number">128</span><br><span class="line-number">129</span><br><span class="line-number">130</span><br><span class="line-number">131</span><br><span class="line-number">132</span><br><span class="line-number">133</span><br><span class="line-number">134</span><br><span class="line-number">135</span><br><span class="line-number">136</span><br><span class="line-number">137</span><br><span class="line-number">138</span><br><span class="line-number">139</span><br><span class="line-number">140</span><br><span class="line-number">141</span><br><span class="line-number">142</span><br><span class="line-number">143</span><br><span class="line-number">144</span><br><span class="line-number">145</span><br><span class="line-number">146</span><br><span class="line-number">147</span><br><span class="line-number">148</span><br><span class="line-number">149</span><br><span class="line-number">150</span><br><span class="line-number">151</span><br><span class="line-number">152</span><br><span class="line-number">153</span><br><span class="line-number">154</span><br><span class="line-number">155</span><br><span class="line-number">156</span><br></div></div><p>如果使用透明代理需要在 iptables 或 ip6tables 配置中加入</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code># 设置策略路由 v4\nip rule add fwmark 1 table 100\nip route add local 0.0.0.0/0 dev lo table 100\n\n# 设置策略路由 v6\nip -6 rule add fwmark 1 table 106\nip -6 route add local ::/0 dev lo table 106\n\n# VPS IP 直连\niptables -t mangle -A XRAY_MASK -d VSP_IPv4/32 -j RETURN\nip6tables -t mangle -A XRAY6_MASK -d VPS_IPv6/128 -j RETURN\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h2 id="客户端及服务端启动服务" tabindex="-1"><a class="header-anchor" href="#客户端及服务端启动服务" aria-hidden="true">#</a> 客户端及服务端启动服务</h2><p><code>systemctl restart xray</code></p><p><code>systemctl restart nginx</code></p><h2 id="结束" tabindex="-1"><a class="header-anchor" href="#结束" aria-hidden="true">#</a> 结束</h2><h1 id="双端-haproxy-构建-htpps-隧道隐藏指纹" tabindex="-1"><a class="header-anchor" href="#双端-haproxy-构建-htpps-隧道隐藏指纹" aria-hidden="true">#</a> 双端 Haproxy 构建 HTPPS 隧道隐藏指纹</h1><p>安装 Haproxy</p><p><code>pacman -Su haproxy</code> 或 <code>apt install haproxy</code></p><p>Haproxy 处理 ssl 需要 openssl 支持，检查 openssl 版本，必要时安装或更新</p><h2 id="https-隧道" tabindex="-1"><a class="header-anchor" href="#https-隧道" aria-hidden="true">#</a> HTTPS 隧道</h2><p>前述 Nginx HTTPS 隧道 Hproxy 同样可以简单做到</p><p>网路结构：</p><p>xray_client ---tcp--- haproxy_client ---HTTPS--- haproxy_sever ---tcp--- xray_server</p><h3 id="haproxy-client-配置-运行前去掉注释" tabindex="-1"><a class="header-anchor" href="#haproxy-client-配置-运行前去掉注释" aria-hidden="true">#</a> haproxy_client 配置 (运行前去掉注释)</h3><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>global\n    log /dev/log local0 alert\n    log /dev/log local1 alert\n    stats socket /dev/shm/admin.sock mode 660 level admin expose-fd listeners\n    stats timeout 30s\n    user root\n    group root\n    daemon\n\n    # 隧道强制使用 TLS 1.3\n    ssl-default-server-options ssl-min-ver TLSv1.3\n\ndefaults\n    log global\n    mode tcp\n    timeout connect 5s\n    timeout client  300s\n    timeout server  300s\n\nfrontend xray\n    bind 127.0.0.1:6666 # 监听本机 6666 端口\n    default_backend tunnel\n\nbackend tunnel\n    server tunnel www.example.com:443 ssl verify none sni req.hdr(host) alpn h2,http/1.1\n    # 域名或 IP 均可以，若填域名建议在 hosts 中指定 IP 降低解析时间；alpn 与服务器协商，服务器端为 alpn h2,http1.1 时，客户端指定为 h2 则隧道为 HTTP2 方式连接，指定为 http1.1 为 HTTP 方式，双端均写优先 h2\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br></div></div><h3 id="haproxy-server-配置-运行前去掉注释" tabindex="-1"><a class="header-anchor" href="#haproxy-server-配置-运行前去掉注释" aria-hidden="true">#</a> haproxy_server 配置 (运行前去掉注释)</h3><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>global\n    log /dev/log local0 alert\n    log /dev/log local1 alert\n    stats socket /dev/shm/admin.sock mode 660 level admin expose-fd listeners\n    stats timeout 30s\n    user root\n    group root\n    daemon\n\n    # 指定安全套件并指定 ssl 版本最低 1.2 增加真实性\n    ssl-default-bind-ciphers ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-GCM-SHA256\n    ssl-default-bind-ciphersuites TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256\n    ssl-default-bind-options ssl-min-ver TLSv1.2\n\ndefaults\n    log global\n    mode tcp\n    timeout connect 5s\n    timeout client  300s\n    timeout server  300s\n\nfrontend tls-in\n    bind :::443 ssl crt /path/to/pem alpn h2,http/1.1 # haproxy 使用 pem 进行 ssl 解密，pem 由 cat www.example.com.crt www.example.com.key &gt; www.example.com.pem 获得\n    default_backend xray\n    tcp-request inspect-delay 5s\n    tcp-request content accept if HTTP\n    use_backend web if HTTP\n\nbackend xray\n    server xray /dev/shm/vless.sock # 支持 abstract 格式： &quot;abns@vless.sock&quot; ；loopback 方式：127.0.0.1:6666\n\nbackend web\n    server web /dev/shm/h1h2c.sock # 回落到网页\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br></div></div><h3 id="xray-配置-1" tabindex="-1"><a class="header-anchor" href="#xray-配置-1" aria-hidden="true">#</a> xray 配置</h3><p>同上 nginx 部分：最简单的 TCP 配置，可搭配任意协议，建议使用 VLESS+TCP 无需多余加密，参考文档或其他示例</p><h2 id="websocket-over-http-2" tabindex="-1"><a class="header-anchor" href="#websocket-over-http-2" aria-hidden="true">#</a> WebSocket over HTTP/2</h2><p>Haproxy 支持 HTTP/2 的 h2c 进站及出站</p><p>然而援引 xray 文档 HTTP/2 的说明</p><p>“由 HTTP/2 的建议，客户端和服务器必须同时开启 TLS 才可以正常使用这个传输方式。...... 当前版本的 HTTP/2 的传输方式并不强制要求入站（服务端）有 TLS 配置。”</p><p>即入站可以使用 h2c，出站并不支持 h2c。因此无法使用 xray_client ---h2c--- haproxy_client ---HTTP/2+TLS--- haproxy_sever ---h2c--- xray_server</p><p>但是可以通过 ws 偷个鸡，Haproxy 支持 ws over HTTP/2</p><p>则网络结构：xray_client ---ws--- haproxy_client ---ws over HTTP/2 over HTTPS--- haproxy_sever ---ws--- xray_server</p><h3 id="haproxy-client-配置" tabindex="-1"><a class="header-anchor" href="#haproxy-client-配置" aria-hidden="true">#</a> haproxy_client 配置</h3><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>global\n    log /dev/log local0 alert\n    log /dev/log local1 alert\n    stats socket /dev/shm/admin.sock mode 660 level admin expose-fd listeners\n    stats timeout 30s\n    user root\n    group root\n    daemon\n\n    # 调整 HTTP/2 的性能，当遇到 HTTP/2 性能问题时都可以设置相关项，更多设置见 Haproxy 文档 tune.h2 部分 https://docs.haproxy.org/2.7/configuration.html\n    tune.h2.initial-window-size 536870912 # 初始窗口大小，建议设置，默认值 65536 单位 byte，此值在突发大流量情况下需要一定加载时间，建议根据网速调整\n    tune.h2.max-concurrent-streams 512 # 复用线路数，可根据情况设置，默认值 100，一般不用设置(官方不建议改动)\n\n    ssl-default-server-options ssl-min-ver TLSv1.3\n\ndefaults\n    log global\n    mode http\n    timeout connect 5s\n    timeout client  300s\n    timeout server  300s\n\nfrontend xray\n    bind 127.0.0.1:6666\n    default_backend tunnel\n\nbackend tunnel\n    server tunnel www.example.com:443 ssl verify none sni req.hdr(host) ws h2 alpn h2\n    # ws over HTTP/2\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br></div></div><h3 id="haproxy-server-配置" tabindex="-1"><a class="header-anchor" href="#haproxy-server-配置" aria-hidden="true">#</a> haproxy_server 配置</h3><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>global\n    log /dev/log local0 alert\n    log /dev/log local1 alert\n    stats socket /dev/shm/admin.sock mode 660 level admin expose-fd listeners\n    stats timeout 30s\n    user root\n    group root\n    daemon\n\n    # 客户端配置即可，服务端配置也无妨\n    tune.h2.initial-window-size 536870912\n    tune.h2.max-concurrent-streams 512\n\n    ssl-default-bind-ciphers ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-GCM-SHA256\n    ssl-default-bind-ciphersuites TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256\n    ssl-default-bind-options ssl-min-ver TLSv1.2\n\ndefaults\n    log global\n    mode http\n    timeout connect 5s\n    timeout client  300s\n    timeout server  300s\n\nfrontend tls-in\n    bind :::443 ssl crt /path/to/pem alpn h2,http/1.1\n    use_backend xray if { ssl_fc_alpn -i h2 } { path_beg /tunnel }\n    use_backend server1 if { ssl_fc_alpn -i h2 } { path_beg /path1 }\n    use_backend server2 if { ssl_fc_alpn -i h2 } { path_beg /path2 }\n    use_backend server3 if { ssl_fc_alpn -i h2 } { path_beg /path3 }\n    default_backend web\n    # haproxy 使用 http 模式可以根据 path 分流\n\nbackend xray\n    server xray abns@vless.sock ws h1\n\nbackend server1\n    server server1 abns@server1.sock ws h1\n\nbackend server2\n    server server2 abns@server2.sock ws h1\n\nbackend server3\n    server server3 abns@server3.sock ws h1\n\nbackend web\n    server web /dev/shm/h1h2c.sock\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br></div></div><h3 id="xray-配置-2" tabindex="-1"><a class="header-anchor" href="#xray-配置-2" aria-hidden="true">#</a> xray 配置</h3><p>简单的 websocket 配置即可，无需 TLS， 配置见 xray 文档示例，配置 &quot;path&quot; 可以用于服务端 haproxy 分流（客户端有分流需求同样可以通过客户端 haproxy 进行，原理类似，参考服务端的 path 分流配置）</p><h2 id="grpc-over-http-2" tabindex="-1"><a class="header-anchor" href="#grpc-over-http-2" aria-hidden="true">#</a> gRPC over HTTP/2</h2><p>虽然双端的 h2c 不行，但是 gRPC 不要求必须 TLS，直接冲</p><p>网络结构：xray_client ---gRPC h2c--- haproxy_client ---gRPC over HTTP/2 over HTTPS--- haproxy_sever ---gRPC h2c--- xray_server</p><h3 id="haproxy-client-配置-1" tabindex="-1"><a class="header-anchor" href="#haproxy-client-配置-1" aria-hidden="true">#</a> haproxy_client 配置</h3><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>global\n    log /dev/log local0 alert\n    log /dev/log local1 alert\n    stats socket /dev/shm/admin.sock mode 660 level admin expose-fd listeners\n    stats timeout 30s\n    user root\n    group root\n    daemon\n\n    tune.h2.initial-window-size 536870912\n    tune.h2.max-concurrent-streams 512\n\n    ssl-default-server-options ssl-min-ver TLSv1.3\n\ndefaults\n    log global\n    mode http\n    timeout connect 5s\n    timeout client  300s\n    timeout server  300s\n\nfrontend xray\n    bind 127.0.0.1:6666 proto h2 # 指定 proto h2 使用 h2c\n    default_backend tunnel\n\nbackend tunnel\n    server tunnel www.example.com:443 ssl verify none sni req.hdr(host) alpn h2\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br></div></div><h3 id="haproxy-server-配置-1" tabindex="-1"><a class="header-anchor" href="#haproxy-server-配置-1" aria-hidden="true">#</a> haproxy_server 配置</h3><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>global\n    log /dev/log local0 alert\n    log /dev/log local1 alert\n    stats socket /dev/shm/admin.sock mode 660 level admin expose-fd listeners\n    stats timeout 30s\n    user root\n    group root\n    daemon\n\n    tune.h2.initial-window-size 536870912\n    tune.h2.max-concurrent-streams 512\n\n    ssl-default-bind-ciphers ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-GCM-SHA256\n    ssl-default-bind-ciphersuites TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256\n    ssl-default-bind-options ssl-min-ver TLSv1.2\n\ndefaults\n    log global\n    mode http\n    timeout connect 5s\n    timeout client  300s\n    timeout server  300s\n\nfrontend tls-in\n    bind :::443 ssl crt /path/to/pem alpn h2,http/1.1\n    use_backend xray if { ssl_fc_alpn -i h2 } { path_beg /tunnel } # xray gRPC 中配置的 &quot;serviceName&quot; 在 harpoxy 中可以使用 path 进行分流，为方便使用 &quot;multiMode&quot;，使用 path_beg 参数匹配路径\n    use_backend server1 if { ssl_fc_alpn -i h2 } { path_beg /path1 }\n    use_backend server2 if { ssl_fc_alpn -i h2 } { path_beg /path2 }\n    use_backend server3 if { ssl_fc_alpn -i h2 } { path_beg /path3 }\n    default_backend web\n\nbackend xray\n    server xray abns@vless.sock proto h2\n\nbackend server1\n    server server1 abns@server1.sock proto h2\n\nbackend server2\n    server server2 abns@server2.sock proto h2\n\nbackend server3\n    server server3 abns@server3.sock proto h2\n\nbackend web\n    server web /dev/shm/h1h2c.sock\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br></div></div><h3 id="xray-配置-3" tabindex="-1"><a class="header-anchor" href="#xray-配置-3" aria-hidden="true">#</a> xray 配置</h3><p>简单的 gRPC 配置，无需 TLS，配置见文档，配置的 serviceName 可用于分流。</p><h1 id="haproxy-使用自签证书进行双端认证-grpc-示例" tabindex="-1"><a class="header-anchor" href="#haproxy-使用自签证书进行双端认证-grpc-示例" aria-hidden="true">#</a> Haproxy 使用自签证书进行双端认证（gRPC 示例）</h1><p>这里使用自签证书双端认证加强隧道安全性（但会牺牲一点延迟，不过使用 gRPC 后感知不强），而服务端同时处理信任的证书和自签名证书，并据此分流伪装网站和隧道流量</p><p>其中 www.example.com 为伪装站信任证书（如白话文中申请的证书）</p><p>tunnel.example.com 为自签证书网址，自签证书可以参考 https://learn.microsoft.com/zh-cn/azure/application-gateway/self-signed-certificates</p><p>根证书 ca.crt 服务器证书 server.crt 服务器密钥 server.key</p><p>至少需要生成一个 server.pem，客户端可以同样使用此证书用于双端认证；或者生成两个证书，一个 client，一个 server，用于双端认证</p><p>需准备 fullchain.crt 用于认证（ cat server.crt ca.crt &gt; fullchain.crt ），server.pem （ cat server.crt server.key ca.crt &gt; server.pem ）用于解密</p><h3 id="haproxy-client-配置-2" tabindex="-1"><a class="header-anchor" href="#haproxy-client-配置-2" aria-hidden="true">#</a> haproxy_client 配置</h3><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>global\n    log /dev/log local0 alert\n    log /dev/log local1 alert\n    stats socket /dev/shm/admin.sock mode 660 level admin expose-fd listeners\n    stats timeout 30s\n    user root\n    group root\n    daemon\n\n    tune.h2.initial-window-size 536870912\n    tune.h2.max-concurrent-streams 512\n\n    ssl-default-server-options ssl-min-ver TLSv1.3\n\ndefaults\n    log global\n    mode http\n    timeout connect 5s\n    timeout client 300s\n    timeout server 300s\n\nfrontend xray\n    bind 127.0.0.1:6666 proto h2\n    default_backend tunnel\n\nbackend tunnel\n    server tunnel tunnel.example.com:443 tfo allow-0rtt ssl crt /path/to/client.pem verify required ca-file /path/to/fullchain.crt sni str(tunnel.example.com) alpn h2\n    # 网址自定义，和自签证书一致即可，hosts 中配置 IP 解析，sni 的 str 设定 sni，用于服务端识别\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br></div></div><h3 id="haproxy-server-配置-2" tabindex="-1"><a class="header-anchor" href="#haproxy-server-配置-2" aria-hidden="true">#</a> haproxy_server 配置</h3><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>global\n    log /dev/log local0 alert\n    log /dev/log local1 alert\n    stats socket /dev/shm/admin.sock mode 660 level admin expose-fd listeners\n    stats timeout 30s\n    user root\n    group root\n    daemon\n\n    tune.h2.initial-window-size 536870912\n    tune.h2.max-concurrent-streams 512\n\n    ssl-default-bind-ciphers ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-GCM-SHA256\n    ssl-default-bind-ciphersuites TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256\n    ssl-default-bind-options ssl-min-ver TLSv1.2\n\ndefaults\n    log global\n    mode http\n    timeout connect 5s\n    timeout client  300s\n    timeout server  300s\n\nfrontend tls-in\n    bind :::443 tfo allow-0rtt ssl crt /path/to/server.pem verify optional ca-file /path/to/fullchain.crt crt /path/to/www.example.com.pem alpn h2,http/1.1\n    use_backend xray if { ssl_fc_sni tunnel.example.com } { ssl_c_used } { ssl_fc_alpn -i h2 } { path_beg /tunnel }\n    use_backend server1 if { ssl_fc_sni atunnel.example.com } { ssl_c_used }  { ssl_fc_alpn -i h2 } { path_beg /path2 }\n    use_backend server2 if { ssl_fc_sni btunnel.example.com } { ssl_c_used }  { ssl_fc_alpn -i h2 } { path_beg /path3 }\n    use_backend server3 if { ssl_fc_sni ctunnel.example.com } { ssl_c_used }  { ssl_fc_alpn -i h2 } { path_beg /path4 }\n    default_backend web\n    # Haproxy 支持多个 pem 解密\n    # 可根据多个客户端的不同 sni 分流，也可以 path 分流，方式多样，更多 acl 见 Haproxy 文档\n\nbackend xray\n    server xray abns@vless.sock proto h2\n\nbackend server1\n    server server1 abns@server1.sock proto h2\n\nbackend server2\n    server server2 abns@server2.sock proto h2\n\nbackend server3\n    server server3 abns@server3.sock proto h2\n\nbackend web\n    server web /dev/shm/h1h2c.sock\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br></div></div><h3 id="xray-配置-4" tabindex="-1"><a class="header-anchor" href="#xray-配置-4" aria-hidden="true">#</a> xray 配置</h3><p>简单的 gRPC 配置，无需 TLS，配置见文档，配置的 serviceName 可用于分流。</p>',70),u={render:function(n,s){const e=(0,a.up)("OutboundLink");return(0,a.wg)(),(0,a.iD)(a.HY,null,[r,(0,a._)("p",null,[l,(0,a._)("a",p,[t,(0,a.Wm)(e)])]),b],64)}}}}]);