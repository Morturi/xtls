"use strict";(self.webpackChunkXray_docs_next=self.webpackChunkXray_docs_next||[]).push([[5170],{72045:(n,s,a)=>{a.r(s),a.d(s,{data:()=>t});const t={key:"v-e3dfff38",path:"/config/transport.html",title:"传输方式",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"TransportObject",slug:"transportobject",children:[]},{level:2,title:"StreamSettingsObject",slug:"streamsettingsobject",children:[{level:3,title:"TLSObject",slug:"tlsobject",children:[]},{level:3,title:"SockoptObject",slug:"sockoptobject",children:[]}]}],filePathRelative:"config/transport.md",git:{updatedTime:1675917644e3,contributors:[{name:"JimhHan",email:"50871214+JimhHan@users.noreply.github.com",commits:10},{name:"Jim Han",email:"50871214+JimhHan@users.noreply.github.com",commits:8},{name:"xqzr",email:"34030394+xqzr@users.noreply.github.com",commits:4},{name:"yuhan6665",email:"1588741+yuhan6665@users.noreply.github.com",commits:3},{name:"Daniel Ding",email:"41363844+BioniCosmos@users.noreply.github.com",commits:1},{name:"Kobe Arthur Scofield",email:"kobearthurxc@outlook.com",commits:1},{name:"lxsq",email:"98205617+lxsq@users.noreply.github.com",commits:1}]}}},94630:(n,s,a)=>{a.r(s),a.d(s,{default:()=>ka});var t=a(66252);const o=(0,t.uE)('<h1 id="传输方式" tabindex="-1"><a class="header-anchor" href="#传输方式" aria-hidden="true">#</a> 传输方式</h1><p>传输方式（transport）是当前 Xray 节点和其它节点对接的方式。</p><p>传输方式指定了稳定的数据传输的方式。通常来说，一个网络连接的两端需要有对称的传输方式。比如一端用了 WebSocket，那么另一个端也必须使用 WebSocket，否则无法建立连接。</p><p>传输方式（transport）配置有两部分:</p><ol><li>全局配置（<a href="#transportobject">TransportObject</a>）</li><li>局部配置（<a href="#streamsettingsobject">StreamSettingsObject</a>）。</li></ol><ul><li>局部配置时,可以指定每个单独的入站或出站用怎样的方式传输。</li><li>通常来说客户端和服务器对应的入站和出站需要使用同样的传输方式。当其配置指定了一种传输方式，但没有填写具体设置时，此传输方式会使用全局配置中的设置。</li></ul><h2 id="transportobject" tabindex="-1"><a class="header-anchor" href="#transportobject" aria-hidden="true">#</a> TransportObject</h2><p><code>TransportObject</code> 对应配置文件的 <code>transport</code> 项。</p><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token punctuation">{</span>\n  <span class="token property">&quot;transport&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token property">&quot;tcpSettings&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token property">&quot;kcpSettings&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token property">&quot;wsSettings&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token property">&quot;httpSettings&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token property">&quot;quicSettings&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token property">&quot;dsSettings&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token property">&quot;grpcSettings&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div>',9),e=(0,t._)("code",null,"tcpSettings",-1),p=(0,t.Uk)(": "),c=(0,t.Uk)("TcpObject"),l=(0,t._)("p",null,"针对 TCP 连接的配置。",-1),u=(0,t._)("code",null,"kcpSettings",-1),r=(0,t.Uk)(": "),i=(0,t.Uk)("KcpObject"),k=(0,t._)("p",null,"针对 mKCP 连接的配置。",-1),d=(0,t._)("code",null,"wsSettings",-1),b=(0,t.Uk)(": "),q=(0,t.Uk)("WebSocketObject"),m=(0,t._)("p",null,"针对 WebSocket 连接的配置。",-1),g=(0,t._)("code",null,"httpSettings",-1),S=(0,t.Uk)(": "),f=(0,t.Uk)("HttpObject"),h=(0,t._)("p",null,"针对 HTTP/2 连接的配置。",-1),_=(0,t._)("code",null,"quicSettings",-1),y=(0,t.Uk)(": "),U=(0,t.Uk)("QuicObject"),x=(0,t._)("p",null,"针对 QUIC 连接的配置。",-1),T=(0,t._)("code",null,"grpcSettings",-1),A=(0,t.Uk)(": "),v=(0,t.Uk)("GRPCObject"),w=(0,t._)("p",null,"针对 gRPC 连接的配置。",-1),P=(0,t._)("code",null,"dsSettings",-1),j=(0,t.Uk)(": "),L=(0,t.Uk)("DomainSocketObject"),C=(0,t.uE)('<p>针对 Domain Socket 连接的配置。</p><h2 id="streamsettingsobject" tabindex="-1"><a class="header-anchor" href="#streamsettingsobject" aria-hidden="true">#</a> StreamSettingsObject</h2><p><code>StreamSettingsObject</code> 对应入站或出站中的 <code>streamSettings</code> 项。每一个入站或出站都可以分别配置不同的传输配置，都可以设置 <code>streamSettings</code> 来进行一些传输的配置。</p><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token punctuation">{</span>\n  <span class="token property">&quot;network&quot;</span><span class="token operator">:</span> <span class="token string">&quot;tcp&quot;</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;security&quot;</span><span class="token operator">:</span> <span class="token string">&quot;none&quot;</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;tlsSettings&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;tcpSettings&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;kcpSettings&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;wsSettings&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;httpSettings&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;quicSettings&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;dsSettings&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;grpcSettings&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;sockopt&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token property">&quot;mark&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>\n    <span class="token property">&quot;tcpFastOpen&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n    <span class="token property">&quot;tproxy&quot;</span><span class="token operator">:</span> <span class="token string">&quot;off&quot;</span><span class="token punctuation">,</span>\n    <span class="token property">&quot;domainStrategy&quot;</span><span class="token operator">:</span> <span class="token string">&quot;AsIs&quot;</span><span class="token punctuation">,</span>\n    <span class="token property">&quot;dialerProxy&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>\n    <span class="token property">&quot;acceptProxyProtocol&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n    <span class="token property">&quot;tcpKeepAliveInterval&quot;</span><span class="token operator">:</span> <span class="token number">0</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><blockquote><p><code>network</code>: &quot;tcp&quot; | &quot;kcp&quot; | &quot;ws&quot; | &quot;http&quot; | &quot;domainsocket&quot; | &quot;quic&quot; | &quot;grpc&quot;</p></blockquote><p>连接的数据流所使用的传输方式类型，默认值为 <code>&quot;tcp&quot;</code></p><blockquote><p><code>security</code>: &quot;none&quot; | &quot;tls&quot; | &quot;xtls&quot;</p></blockquote><p>是否启用传输层加密，支持的选项有</p>',8),I=(0,t._)("li",null,[(0,t._)("code",null,'"none"'),(0,t.Uk)(" 表示不加密（默认值）")],-1),O=(0,t._)("code",null,'"tls"',-1),E=(0,t.Uk)(" 表示使用 "),W={href:"https://en.wikipedia.org/wiki/base/transport_Layer_Security",target:"_blank",rel:"noopener noreferrer"},D=(0,t.Uk)("TLS"),B=(0,t.Uk)("。"),F=(0,t._)("code",null,'"xtls"',-1),N=(0,t.Uk)(" 表示使用 "),R=(0,t.Uk)("XTLS"),X=(0,t.Uk)("。"),Q=(0,t._)("blockquote",null,[(0,t._)("p",null,[(0,t._)("code",null,"tlsSettings"),(0,t.Uk)(": "),(0,t._)("a",{href:"#tlsobject"},"TLSObject")])],-1),G=(0,t._)("p",null,"TLS 配置。TLS 由 Golang 提供，通常情况下 TLS 协商的结果为使用 TLS 1.3，不支持 DTLS。",-1),V=(0,t._)("code",null,"xtlsSettings",-1),H=(0,t.Uk)(": "),Y=(0,t._)("a",{href:"#tlsobject"},"XTLSObject",-1),K=(0,t.Uk)(),M=(0,t.uE)('<p>XTLS 配置。XTLS 是 Xray 的原创黑科技, 也是使 Xray 性能一骑绝尘的核心动力。 XTLS 与 TLS 有相同的安全性, 配置方式也和 TLS 一致.</p><div class="custom-container tip"><p class="custom-container-title">提示</p><p>TLS / XTLS 是目前最安全的传输加密方案, 且外部看来流量类型和正常上网具有一致性。 启用 XTLS 并且配置合适的 XTLS 流控模式, 可以在保持和 TLS 相同的安全性的前提下, 性能达到数倍甚至十几倍的提升。 当 <code>security</code> 的值从 <code>tls</code> 改为 <code>xtls</code> 时, 只需将 <code>tlsSettings</code> 修改成为 <code>xtlsSettings</code></p></div>',2),J=(0,t._)("code",null,"tcpSettings",-1),z=(0,t.Uk)(": "),Z=(0,t.Uk)("TcpObject"),$=(0,t._)("p",null,"当前连接的 TCP 配置，仅当此连接使用 TCP 时有效。配置内容与上面的全局配置相同。",-1),nn=(0,t._)("code",null,"kcpSettings",-1),sn=(0,t.Uk)(": "),an=(0,t.Uk)("KcpObject"),tn=(0,t._)("p",null,"当前连接的 mKCP 配置，仅当此连接使用 mKCP 时有效。配置内容与上面的全局配置相同。",-1),on=(0,t._)("code",null,"wsSettings",-1),en=(0,t.Uk)(": "),pn=(0,t.Uk)("WebSocketObject"),cn=(0,t._)("p",null,"当前连接的 WebSocket 配置，仅当此连接使用 WebSocket 时有效。配置内容与上面的全局配置相同。",-1),ln=(0,t._)("code",null,"httpSettings",-1),un=(0,t.Uk)(": "),rn=(0,t.Uk)("HttpObject"),kn=(0,t._)("p",null,"当前连接的 HTTP/2 配置，仅当此连接使用 HTTP/2 时有效。配置内容与上面的全局配置相同。",-1),dn=(0,t._)("code",null,"quicSettings",-1),bn=(0,t.Uk)(": "),qn=(0,t.Uk)("QUICObject"),mn=(0,t._)("p",null,"当前连接的 QUIC 配置，仅当此连接使用 QUIC 时有效。配置内容与上面的全局配置相同。",-1),gn=(0,t._)("code",null,"grpcSettings",-1),Sn=(0,t.Uk)(": "),fn=(0,t.Uk)("GRPCObject"),hn=(0,t._)("p",null,"当前连接的 gRPC 配置，仅当此连接使用 gRPC 时有效。配置内容与上面的全局配置相同。",-1),_n=(0,t._)("code",null,"dsSettings",-1),yn=(0,t.Uk)(": "),Un=(0,t.Uk)("DomainSocketObject"),xn=(0,t.uE)('<p>当前连接的 Domain socket 配置，仅当此连接使用 Domain socket 时有效。配置内容与上面的全局配置相同。</p><blockquote><p><code>sockopt</code>: <a href="#sockoptobject">SockoptObject</a></p></blockquote><p>透明代理相关的具体配置。</p><h3 id="tlsobject" tabindex="-1"><a class="header-anchor" href="#tlsobject" aria-hidden="true">#</a> TLSObject</h3><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token punctuation">{</span>\n  <span class="token property">&quot;serverName&quot;</span><span class="token operator">:</span> <span class="token string">&quot;xray.com&quot;</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;rejectUnknownSni&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;allowInsecure&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;alpn&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;h2&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;http/1.1&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;minVersion&quot;</span><span class="token operator">:</span> <span class="token string">&quot;1.2&quot;</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;maxVersion&quot;</span><span class="token operator">:</span> <span class="token string">&quot;1.3&quot;</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;cipherSuites&quot;</span><span class="token operator">:</span> <span class="token string">&quot;此处填写你需要的加密套件名称,每个套件名称之间用:进行分隔&quot;</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;certificates&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;disableSystemRoot&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;enableSessionResumption&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;fingerprint&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;pinnedPeerCertificateChainSha256&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;&quot;</span><span class="token punctuation">]</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><blockquote><p><code>serverName</code>: string</p></blockquote><p>指定服务器端证书的域名，在连接由 IP 建立时有用。</p><p>当目标连接由域名指定时，比如在 Socks 入站接收到了域名，或者由 Sniffing 功能探测出了域名，这个域名会自动用于 <code>serverName</code>，无须手动配置。</p><blockquote><p><code>rejectUnknownSni</code>: bool</p></blockquote><p>当值为 <code>true</code> 时，服务端接收到的 SNI 与证书域名不匹配即拒绝 TLS 握手，默认为 false。</p><blockquote><p><code>alpn</code>: [ string ]</p></blockquote><p>一个字符串数组，指定了 TLS 握手时指定的 ALPN 数值。默认值为 <code>[&quot;h2&quot;, &quot;http/1.1&quot;]</code>。</p><blockquote><p><code>minVersion</code>: [ string ]</p></blockquote><p>minVersion 为可接受的最小 SSL/TLS 版本。</p><blockquote><p><code>maxVersion</code>: [ string ]</p></blockquote><p>maxVersion 为可接受的最大 SSL/TLS 版本。</p><blockquote><p><code>cipherSuites</code>: [ string ]</p></blockquote><p>CipherSuites 用于配置受支持的密码套件列表, 每个套件名称之间用:进行分隔.</p>',18),Tn=(0,t.Uk)("你可以在 "),An={href:"https://golang.org/src/crypto/tls/cipher_suites.go#L500",target:"_blank",rel:"noopener noreferrer"},vn=(0,t.Uk)("这里"),wn=(0,t.Uk)("或 "),Pn={href:"https://golang.org/src/crypto/tls/cipher_suites.go#L44",target:"_blank",rel:"noopener noreferrer"},jn=(0,t.Uk)("这里"),Ln=(0,t.Uk)(" 找到 golang 加密套件的名词和说明"),Cn=(0,t.uE)('<div class="custom-container danger"><p class="custom-container-title">警告</p><p>以上两项配置为非必要选项，正常情况下不影响安全性 在未配置的情况下 golang 根据设备自动选择. 若不熟悉, 请勿配置此选项, 填写不当引起的问题自行负责</p></div><blockquote><p><code>allowInsecure</code>: true | false</p></blockquote><p>是否允许不安全连接（仅用于客户端）。默认值为 <code>false</code>。</p><p>当值为 <code>true</code> 时，Xray 不会检查远端主机所提供的 TLS 证书的有效性。</p><div class="custom-container danger"><p class="custom-container-title">警告</p><p>出于安全性考虑，这个选项不应该在实际场景中选择 true，否则可能遭受中间人攻击。</p></div><blockquote><p><code>disableSystemRoot</code>: true | false</p></blockquote><p>是否禁用操作系统自带的 CA 证书。默认值为 <code>false</code>。</p><p>当值为 <code>true</code> 时，Xray 只会使用 <code>certificates</code> 中指定的证书进行 TLS 握手。当值为 <code>false</code> 时，Xray 只会使用操作系统自带的 CA 证书进行 TLS 握手。</p><blockquote><p><code>enableSessionResumption</code>: true | false</p></blockquote><p>此参数的设置为 false 时, ClientHello 里没有 session_ticket 这个扩展。 通常来讲 go 语言程序的 ClientHello 里并没有用到这个扩展, 因此建议保持默认值。 默认值为 <code>false</code>。</p><blockquote><p><code>fingerprint</code> : string</p></blockquote><p>此参数用于配置指定 <code>TLS Client Hello</code> 的指纹。当其值为空时，表示不启用此功能。启用后，Xray 将通过 uTLS 库 <strong>模拟</strong> <code>TLS</code> 指纹，或随机生成。支持三种配置方式：</p><ol><li>常见浏览器最新版本的 TLS 指纹 包括</li></ol><ul><li><code>&quot;chrome&quot;</code></li><li><code>&quot;firefox&quot;</code></li><li><code>&quot;safari&quot;</code></li><li><code>&quot;ios&quot;</code></li><li><code>&quot;android&quot;</code></li><li><code>&quot;safari&quot;</code></li><li><code>&quot;edge&quot;</code></li><li><code>&quot;360&quot;</code></li><li><code>&quot;qq&quot;</code></li></ul><ol start="2"><li>在 xray 启动时自动生成一个指纹</li></ol><ul><li><code>&quot;random&quot;</code>: 在较新版本的浏览器里随机抽取一个</li><li><code>&quot;randomized&quot;</code>: 完全随机生成一个独一无二的指纹 (100% 支持 TLS 1.3 使用 X25519)</li></ul>',16),In={start:"3"},On=(0,t.Uk)("使用 uTLS 原生指纹变量名 例如"),En=(0,t._)("code",null,'"HelloRandomizedNoALPN"',-1),Wn=(0,t.Uk)(),Dn=(0,t._)("code",null,'"HelloChrome_106_Shuffle"',-1),Bn=(0,t.Uk)("。完整名单见 "),Fn={href:"https://github.com/refraction-networking/utls/blob/master/u_common.go#L162",target:"_blank",rel:"noopener noreferrer"},Nn=(0,t.Uk)("uTLS 库"),Rn={class:"custom-container tip"},Xn=(0,t._)("p",{class:"custom-container-title"},"提示",-1),Qn=(0,t.Uk)("此功能仅 "),Gn=(0,t._)("strong",null,"模拟",-1),Vn=(0,t.Uk)(),Hn=(0,t._)("code",null,"TLS Client Hello",-1),Yn=(0,t.Uk)(" 的指纹，行为、其他指纹与 Golang 相同。如果你希望更加完整地模拟浏览器 "),Kn=(0,t._)("code",null,"TLS",-1),Mn=(0,t.Uk)(" 指纹与行为，可以使用 "),Jn=(0,t.Uk)("Browser Dialer"),zn=(0,t.Uk)("。"),Zn=(0,t.uE)('<blockquote><p><code>pinnedPeerCertificateChainSha256</code>: [string]</p></blockquote><p>用于指定远程服务器的证书链 SHA256 散列值，使用标准编码格式。仅有当服务器端证书链散列值符合设置项中之一时才能成功建立 TLS 连接。</p><p>在连接因为此配置失败时，会展示远程服务器证书散列值。</p><div class="custom-container danger"><p class="custom-container-title">警告</p><p>不建议使用这种方式获得证书链散列值，因为在这种情况下将没有机会验证此时服务器提供的证书是否为真实证书，进而不保证获得的证书散列值为期望的散列值。</p></div><div class="custom-container tip"><p class="custom-container-title">提示</p><p>如果需要获得证书的散列值，应在命令行中运行 <code>xray tls certChainHash --cert &lt;cert.pem&gt;</code> 来获取，<code>&lt;cert.pem&gt;</code> 应替换为实际证书文件路径。</p></div><blockquote><p><code>certificates</code>: [ <a href="#certificateobject">CertificateObject</a> ]</p></blockquote><p>证书列表，其中每一项表示一个证书（建议 fullchain）。</p>',7),$n={class:"custom-container tip"},ns=(0,t._)("p",{class:"custom-container-title"},"提示",-1),ss=(0,t.Uk)("如果要在 ssllibs 或者 myssl 获得 A/A+ 等级的评价, 请参考 "),as={href:"https://github.com/XTLS/Xray-core/discussions/56#discussioncomment-215600",target:"_blank",rel:"noopener noreferrer"},ts=(0,t.Uk)("这里"),os=(0,t.Uk)("."),es=(0,t.uE)('<h4 id="certificateobject" tabindex="-1"><a class="header-anchor" href="#certificateobject" aria-hidden="true">#</a> CertificateObject</h4><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token punctuation">{</span>\n  <span class="token property">&quot;ocspStapling&quot;</span><span class="token operator">:</span> <span class="token number">3600</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;oneTimeLoading&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;usage&quot;</span><span class="token operator">:</span> <span class="token string">&quot;encipherment&quot;</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;certificateFile&quot;</span><span class="token operator">:</span> <span class="token string">&quot;/path/to/certificate.crt&quot;</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;keyFile&quot;</span><span class="token operator">:</span> <span class="token string">&quot;/path/to/key.key&quot;</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;certificate&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n    <span class="token string">&quot;--BEGIN CERTIFICATE--&quot;</span><span class="token punctuation">,</span>\n    <span class="token string">&quot;MIICwDCCAaigAwIBAgIRAO16JMdESAuHidFYJAR/7kAwDQYJKoZIhvcNAQELBQAw&quot;</span><span class="token punctuation">,</span>\n    <span class="token string">&quot;ADAeFw0xODA0MTAxMzU1MTdaFw0xODA0MTAxNTU1MTdaMAAwggEiMA0GCSqGSIb3&quot;</span><span class="token punctuation">,</span>\n    <span class="token string">&quot;DQEBAQUAA4IBDwAwggEKAoIBAQCs2PX0fFSCjOemmdm9UbOvcLctF94Ox4BpSfJ+&quot;</span><span class="token punctuation">,</span>\n    <span class="token string">&quot;3lJHwZbvnOFuo56WhQJWrclKoImp/c9veL1J4Bbtam3sW3APkZVEK9UxRQ57HQuw&quot;</span><span class="token punctuation">,</span>\n    <span class="token string">&quot;OzhV0FD20/0YELou85TwnkTw5l9GVCXT02NG+pGlYsFrxesUHpojdl8tIcn113M5&quot;</span><span class="token punctuation">,</span>\n    <span class="token string">&quot;pypgDPVmPeeORRf7nseMC6GhvXYM4txJPyenohwegl8DZ6OE5FkSVR5wFQtAhbON&quot;</span><span class="token punctuation">,</span>\n    <span class="token string">&quot;OAkIVVmw002K2J6pitPuJGOka9PxcCVWhko/W+JCGapcC7O74palwBUuXE1iH+Jp&quot;</span><span class="token punctuation">,</span>\n    <span class="token string">&quot;noPjGp4qE2ognW3WH/sgQ+rvo20eXb9Um1steaYY8xlxgBsXAgMBAAGjNTAzMA4G&quot;</span><span class="token punctuation">,</span>\n    <span class="token string">&quot;A1UdDwEB/wQEAwIFoDATBgNVHSUEDDAKBggrBgEFBQcDATAMBgNVHRMBAf8EAjAA&quot;</span><span class="token punctuation">,</span>\n    <span class="token string">&quot;MA0GCSqGSIb3DQEBCwUAA4IBAQBUd9sGKYemzwPnxtw/vzkV8Q32NILEMlPVqeJU&quot;</span><span class="token punctuation">,</span>\n    <span class="token string">&quot;7UxVgIODBV6A1b3tOUoktuhmgSSaQxjhYbFAVTD+LUglMUCxNbj56luBRlLLQWo+&quot;</span><span class="token punctuation">,</span>\n    <span class="token string">&quot;9BUhC/ow393tLmqKcB59qNcwbZER6XT5POYwcaKM75QVqhCJVHJNb1zSEE7Co7iO&quot;</span><span class="token punctuation">,</span>\n    <span class="token string">&quot;6wIan3lFyjBfYlBEz5vyRWQNIwKfdh5cK1yAu13xGENwmtlSTHiwbjBLXfk+0A/8&quot;</span><span class="token punctuation">,</span>\n    <span class="token string">&quot;r/2s+sCYUkGZHhj8xY7bJ1zg0FRalP5LrqY+r6BckT1QPDIQKYy615j1LpOtwZe/&quot;</span><span class="token punctuation">,</span>\n    <span class="token string">&quot;d4q7MD/dkzRDsch7t2cIjM/PYeMuzh87admSyL6hdtK0Nm/Q&quot;</span><span class="token punctuation">,</span>\n    <span class="token string">&quot;--END CERTIFICATE--&quot;</span>\n  <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;key&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n    <span class="token string">&quot;--BEGIN RSA PRIVATE KEY--&quot;</span><span class="token punctuation">,</span>\n    <span class="token string">&quot;MIIEowIBAAKCAQEArNj19HxUgoznppnZvVGzr3C3LRfeDseAaUnyft5SR8GW75zh&quot;</span><span class="token punctuation">,</span>\n    <span class="token string">&quot;bqOeloUCVq3JSqCJqf3Pb3i9SeAW7Wpt7FtwD5GVRCvVMUUOex0LsDs4VdBQ9tP9&quot;</span><span class="token punctuation">,</span>\n    <span class="token string">&quot;GBC6LvOU8J5E8OZfRlQl09NjRvqRpWLBa8XrFB6aI3ZfLSHJ9ddzOacqYAz1Zj3n&quot;</span><span class="token punctuation">,</span>\n    <span class="token string">&quot;jkUX+57HjAuhob12DOLcST8np6IcHoJfA2ejhORZElUecBULQIWzjTgJCFVZsNNN&quot;</span><span class="token punctuation">,</span>\n    <span class="token string">&quot;itieqYrT7iRjpGvT8XAlVoZKP1viQhmqXAuzu+KWpcAVLlxNYh/iaZ6D4xqeKhNq&quot;</span><span class="token punctuation">,</span>\n    <span class="token string">&quot;IJ1t1h/7IEPq76NtHl2/VJtbLXmmGPMZcYAbFwIDAQABAoIBAFCgG4phfGIxK9Uw&quot;</span><span class="token punctuation">,</span>\n    <span class="token string">&quot;qrp+o9xQLYGhQnmOYb27OpwnRCYojSlT+mvLcqwvevnHsr9WxyA+PkZ3AYS2PLue&quot;</span><span class="token punctuation">,</span>\n    <span class="token string">&quot;C4xW0pzQgdn8wENtPOX8lHkuBocw1rNsCwDwvIguIuliSjI8o3CAy+xVDFgNhWap&quot;</span><span class="token punctuation">,</span>\n    <span class="token string">&quot;/CMzfQYziB7GlnrM6hH838iiy0dlv4I/HKk+3/YlSYQEvnFokTf7HxbDDmznkJTM&quot;</span><span class="token punctuation">,</span>\n    <span class="token string">&quot;aPKZ5qbnV+4AcQfcLYJ8QE0ViJ8dVZ7RLwIf7+SG0b0bqloti4+oQXqGtiESUwEW&quot;</span><span class="token punctuation">,</span>\n    <span class="token string">&quot;/Wzi7oyCbFJoPsFWp1P5+wD7jAGpAd9lPIwPahdr1wl6VwIx9W0XYjoZn71AEaw4&quot;</span><span class="token punctuation">,</span>\n    <span class="token string">&quot;bK4xUXECgYEA3g2o9WqyrhYSax3pGEdvV2qN0VQhw7Xe+jyy98CELOO2DNbB9QNJ&quot;</span><span class="token punctuation">,</span>\n    <span class="token string">&quot;8cSSU/PjkxQlgbOJc8DEprdMldN5xI/srlsbQWCj72wXxXnVnh991bI2clwt7oYi&quot;</span><span class="token punctuation">,</span>\n    <span class="token string">&quot;pcGZwzCrJyFL+QaZmYzLxkxYl1tCiiuqLm+EkjxCWKTX/kKEFb6rtnMCgYEAx0WR&quot;</span><span class="token punctuation">,</span>\n    <span class="token string">&quot;L8Uue3lXxhXRdBS5QRTBNklkSxtU+2yyXRpvFa7Qam+GghJs5RKfJ9lTvjfM/PxG&quot;</span><span class="token punctuation">,</span>\n    <span class="token string">&quot;3vhuBliWQOKQbm1ZGLbgGBM505EOP7DikUmH/kzKxIeRo4l64mioKdDwK/4CZtS7&quot;</span><span class="token punctuation">,</span>\n    <span class="token string">&quot;az0Lq3eS6bq11qL4mEdE6Gn/Y+sqB83GHZYju80CgYABFm4KbbBcW+1RKv9WSBtK&quot;</span><span class="token punctuation">,</span>\n    <span class="token string">&quot;gVIagV/89moWLa/uuLmtApyEqZSfn5mAHqdc0+f8c2/Pl9KHh50u99zfKv8AsHfH&quot;</span><span class="token punctuation">,</span>\n    <span class="token string">&quot;TtjuVAvZg10GcZdTQ/I41ruficYL0gpfZ3haVWWxNl+J47di4iapXPxeGWtVA+u8&quot;</span><span class="token punctuation">,</span>\n    <span class="token string">&quot;eH1cvgDRMFWCgE7nUFzE8wKBgGndUomfZtdgGrp4ouLZk6W4ogD2MpsYNSixkXyW&quot;</span><span class="token punctuation">,</span>\n    <span class="token string">&quot;64cIbV7uSvZVVZbJMtaXxb6bpIKOgBQ6xTEH5SMpenPAEgJoPVts816rhHdfwK5Q&quot;</span><span class="token punctuation">,</span>\n    <span class="token string">&quot;8zetklegckYAZtFbqmM0xjOI6bu5rqwFLWr1xo33jF0wDYPQ8RHMJkruB1FIB8V2&quot;</span><span class="token punctuation">,</span>\n    <span class="token string">&quot;GxvNAoGBAM4g2z8NTPMqX+8IBGkGgqmcYuRQxd3cs7LOSEjF9hPy1it2ZFe/yUKq&quot;</span><span class="token punctuation">,</span>\n    <span class="token string">&quot;ePa2E8osffK5LBkFzhyQb0WrGC9ijM9E6rv10gyuNjlwXdFJcdqVamxwPUBtxRJR&quot;</span><span class="token punctuation">,</span>\n    <span class="token string">&quot;cYTY2HRkJXDdtT0Bkc3josE6UUDvwMpO0CfAETQPto1tjNEDhQhT&quot;</span><span class="token punctuation">,</span>\n    <span class="token string">&quot;--END RSA PRIVATE KEY--&quot;</span>\n  <span class="token punctuation">]</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br></div></div><blockquote><p><code>ocspStapling</code>: number</p></blockquote><p>OCSP 装订更新，与证书热重载的时间间隔。 单位：秒。默认值为 <code>3600</code>，即一小时。</p><blockquote><p><code>oneTimeLoading</code>: true | false</p></blockquote><p>仅加载一次。值为 <code>true</code> 时将关闭证书热重载功能与 ocspStapling 功能。</p><div class="custom-container warning"><p class="custom-container-title">注意</p><p>当值为 <code>true</code> 时，将会关闭 OCSP 装订。</p></div><blockquote><p><code>usage</code>: &quot;encipherment&quot; | &quot;verify&quot; | &quot;issue&quot;</p></blockquote><p>证书用途，默认值为 <code>&quot;encipherment&quot;</code>。</p><ul><li><code>&quot;encipherment&quot;</code>：证书用于 TLS 认证和加密。</li><li><code>&quot;verify&quot;</code>：证书用于验证远端 TLS 的证书。当使用此项时，当前证书必须为 CA 证书。</li><li><code>&quot;issue&quot;</code>：证书用于签发其它证书。当使用此项时，当前证书必须为 CA 证书。</li></ul><div class="custom-container tip"><p class="custom-container-title">TIP 1</p><p>在 Windows 平台上可以将自签名的 CA 证书安装到系统中，即可验证远端 TLS 的证书。</p></div><div class="custom-container tip"><p class="custom-container-title">TIP 2</p><p>当有新的客户端请求时，假设所指定的 <code>serverName</code> 为 <code>&quot;xray.com&quot;</code>，Xray 会先从证书列表中寻找可用于 <code>&quot;xray.com&quot;</code> 的证书，如果没有找到，则使用任一 <code>usage</code> 为 <code>&quot;issue&quot;</code> 的证书签发一个适用于 <code>&quot;xray.com&quot;</code> 的证书，有效期为一小时。并将新的证书加入证书列表，以供后续使用。</p></div><div class="custom-container tip"><p class="custom-container-title">TIP 3</p><p>当 <code>certificateFile</code> 和 <code>certificate</code> 同时指定时，Xray 优先使用 <code>certificateFile</code>。<code>keyFile</code> 和 <code>key</code> 也一样。</p></div><div class="custom-container tip"><p class="custom-container-title">TIP 4</p><p>当 <code>usage</code> 为 <code>&quot;verify&quot;</code> 时，<code>keyFile</code> 和 <code>key</code> 可均为空。</p></div><div class="custom-container tip"><p class="custom-container-title">TIP 5</p><p>使用 <code>xray tls cert</code> 可以生成自签名的 CA 证书。</p></div>',15),ps={class:"custom-container tip"},cs=(0,t._)("p",{class:"custom-container-title"},"TIP 6",-1),ls=(0,t.Uk)("如已经拥有一个域名, 可以使用工具便捷的获取免费第三方证书,如"),us={href:"https://github.com/acmesh-official/acme.sh",target:"_blank",rel:"noopener noreferrer"},rs=(0,t.Uk)("acme.sh"),is=(0,t.uE)('<blockquote><p><code>certificateFile</code>: string</p></blockquote><p>证书文件路径，如使用 OpenSSL 生成，后缀名为 .crt。</p><blockquote><p><code>certificate</code>: [ string ]</p></blockquote><p>一个字符串数组，表示证书内容，格式如样例所示。<code>certificate</code> 和 <code>certificateFile</code> 二者选一。</p><blockquote><p><code>keyFile</code>: string</p></blockquote><p>密钥文件路径，如使用 OpenSSL 生成，后缀名为 .key。目前暂不支持需要密码的 key 文件。</p><blockquote><p><code>key</code>: [ string ]</p></blockquote><p>一个字符串数组，表示密钥内容，格式如样例如示。<code>key</code> 和 <code>keyFile</code> 二者选一。</p><h3 id="sockoptobject" tabindex="-1"><a class="header-anchor" href="#sockoptobject" aria-hidden="true">#</a> SockoptObject</h3><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token punctuation">{</span>\n  <span class="token property">&quot;mark&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;tcpFastOpen&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;tproxy&quot;</span><span class="token operator">:</span> <span class="token string">&quot;off&quot;</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;domainStrategy&quot;</span><span class="token operator">:</span> <span class="token string">&quot;AsIs&quot;</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;dialerProxy&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;acceptProxyProtocol&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;tcpKeepAliveInterval&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;tcpcongestion&quot;</span><span class="token operator">:</span> <span class="token string">&quot;bbr&quot;</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;interface&quot;</span><span class="token operator">:</span> <span class="token string">&quot;wg0&quot;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><blockquote><p><code>mark</code>: number</p></blockquote><p>一个整数。当其值非零时，在 ountbound 连接以此数值上标记 SO_MARK。</p><ul><li>仅适用于 Linux 系统。</li><li>需要 CAP_NET_ADMIN 权限。</li></ul><blockquote><p><code>tcpFastOpen</code>: true | false | number</p></blockquote>',14),ks=(0,t.Uk)("是否启用 "),ds={href:"https://zh.wikipedia.org/wiki/TCP%E5%BF%AB%E9%80%9F%E6%89%93%E5%BC%80",target:"_blank",rel:"noopener noreferrer"},bs=(0,t.Uk)("TCP Fast Open"),qs=(0,t.Uk)("。"),ms=(0,t._)("p",null,[(0,t.Uk)("当其值为 "),(0,t._)("code",null,"true"),(0,t.Uk)(" 或"),(0,t._)("code",null,"正整数"),(0,t.Uk)("时，启用 TFO；当其值为 "),(0,t._)("code",null,"false"),(0,t.Uk)(" 或"),(0,t._)("code",null,"负数"),(0,t.Uk)("时，强制关闭 TFO；当此项不存在或为 "),(0,t._)("code",null,"0"),(0,t.Uk)(" 时，使用系统默认设置。 可用于 inbound/outbound。")],-1),gs=(0,t.uE)("<li><p>仅在以下版本（或更新版本）的操作系统中可用:</p><ul><li>Windows 10 (1607)</li><li>Mac OS 10.11 / iOS 9</li><li>Linux 3.16：需要通过内核参数 <code>net.ipv4.tcp_fastopen</code> 进行设定，此参数是一个 bitmap，<code>0x1</code> 代表客户端允许启用，<code>0x2</code> 代表服务器允许启用；默认值为 <code>0x1</code>，如果服务器要启用 TFO，请把此内核参数值设为 <code>0x3</code>。</li><li>FreeBSD 10.3 (Server) / 12.0 (Client)：需要把内核参数 <code>net.inet.tcp.fastopen.server_enabled</code> 以及 <code>net.inet.tcp.fastopen.client_enabled</code> 设为 <code>1</code>。</li></ul></li>",1),Ss=(0,t.Uk)("对于 Inbound，此处所设定的"),fs=(0,t._)("code",null,"正整数",-1),hs=(0,t.Uk)("代表 "),_s={href:"https://tools.ietf.org/html/rfc7413#section-5.1",target:"_blank",rel:"noopener noreferrer"},ys=(0,t.Uk)("待处理的 TFO 连接请求数上限"),Us=(0,t.Uk)(" ，"),xs=(0,t._)("strong",null,"注意并非所有操作系统都支持在此设定",-1),Ts=(0,t.Uk)("："),As=(0,t.uE)("<ul><li>Linux / FreeBSD：此处的设定的<code>正整数</code>值代表上限，可接受的最大值为 2147483647，为 <code>true</code> 时将取 <code>256</code>；注意在 Linux，<code>net.core.somaxconn</code> 会限制此值的上限，如果超过了 <code>somaxconn</code>，请同时提高 <code>somaxconn</code>。</li><li>Mac OS：此处为 <code>true</code> 或<code>正整数</code>时，仅代表启用 TFO，上限需要通过内核参数 <code>net.inet.tcp.fastopen_backlog</code> 单独设定。</li><li>Windows：此处为 <code>true</code> 或<code>正整数</code>时，仅代表启用 TFO。</li></ul>",1),vs=(0,t._)("li",null,[(0,t._)("p",null,[(0,t.Uk)("对于 Outbound，设定为 "),(0,t._)("code",null,"true"),(0,t.Uk)(" 或"),(0,t._)("code",null,"正整数"),(0,t.Uk)("在任何操作系统都仅表示启用 TFO。")])],-1),ws=(0,t.uE)("<blockquote><p><code>tproxy</code>: &quot;redirect&quot; | &quot;tproxy&quot; | &quot;off&quot;</p></blockquote><p>是否开启透明代理（仅适用于 Linux）。</p><ul><li><code>&quot;redirect&quot;</code>：使用 Redirect 模式的透明代理。支持所有基于 IPv4/6 的 TCP 和 UDP 连接。</li><li><code>&quot;tproxy&quot;</code>：使用 TProxy 模式的透明代理。支持所有基于 IPv4/6 的 TCP 和 UDP 连接。</li><li><code>&quot;off&quot;</code>：关闭透明代理。</li></ul><p>透明代理需要 Root 或 <code>CAP\\_NET\\_ADMIN</code> 权限。</p>",4),Ps={class:"custom-container danger"},js=(0,t._)("p",{class:"custom-container-title"},"警告",-1),Ls=(0,t.Uk)("当 "),Cs=(0,t.Uk)("Dokodemo-door"),Is=(0,t.Uk)(" 中指定了 "),Os=(0,t._)("code",null,"followRedirect",-1),Es=(0,t.Uk)("为"),Ws=(0,t._)("code",null,"true",-1),Ds=(0,t.Uk)("，且 Sockopt 设置中的"),Bs=(0,t._)("code",null,"tproxy",-1),Fs=(0,t.Uk)(" 为空时，Sockopt 设置中的"),Ns=(0,t._)("code",null,"tproxy",-1),Rs=(0,t.Uk)(" 的值会被设为 "),Xs=(0,t._)("code",null,'"redirect"',-1),Qs=(0,t.Uk)("。"),Gs=(0,t._)("blockquote",null,[(0,t._)("p",null,[(0,t._)("code",null,"domainStrategy"),(0,t.Uk)(': "AsIs" | "UseIP" | "UseIPv4" | "UseIPv6"')])],-1),Vs=(0,t.Uk)("在之前的版本中，当 Xray 尝试使用域名建立系统连接时，域名的解析由系统完成，不受 Xray 控制。这导致了在 "),Hs={href:"https://github.com/v2ray/v2ray-core/issues/1909",target:"_blank",rel:"noopener noreferrer"},Ys=(0,t.Uk)("非标准 Linux 环境中无法解析域名"),Ks=(0,t.Uk)(" 等问题。为此，Xray 1.3.1 为 Sockopt 引入了 Freedom 中的 domainStrategy，解决了此问题。"),Ms=(0,t._)("p",null,"在目标地址为域名时, 配置相应的值, SystemDialer 的行为模式如下:",-1),Js=(0,t._)("li",null,[(0,t._)("code",null,'"AsIs"'),(0,t.Uk)(": 通过系统 DNS 服务器解析获取 IP, 向此域名发出连接。")],-1),zs=(0,t._)("code",null,'"UseIP"',-1),Zs=(0,t.Uk)("、"),$s=(0,t._)("code",null,'"UseIPv4"',-1),na=(0,t.Uk)(" 和 "),sa=(0,t._)("code",null,'"UseIPv6"',-1),aa=(0,t.Uk)(": 使用"),ta=(0,t.Uk)("内置 DNS 服务器"),oa=(0,t.Uk)("解析获取 IP 后, 直接向此 IP 发出连接。"),ea=(0,t.uE)('<p>默认值为 <code>&quot;AsIs&quot;</code>。</p><div class="custom-container danger"><p class="custom-container-title">警告</p><p>启用了此功能后，不当的配置可能会导致死循环。</p><p>一句话版本：连接到服务器，需要等待 DNS 查询结果；完成 DNS 查询，需要连接到服务器。</p><blockquote><p>Tony: 先有鸡还是先有蛋?</p></blockquote><p>详细解释：</p><ol><li>触发条件：代理服务器（proxy.com）。内置 DNS 服务器，非 Local 模式。</li><li>Xray 尝试向 proxy.com 建立 TCP 连接 <strong>前</strong> ，通过内置 DNS 服务器查询 proxy.com。</li><li>内置 DNS 服务器向 dns.com 建立连接，并发送查询，以获取 proxy.com 的 IP。</li><li><strong>不当的</strong> 的路由规则，导致 proxy.com 代理了步骤 3 中发出的查询。</li><li>Xray 尝试向 proxy.com 建立另一个 TCP 连接。</li><li>在建立连接前，通过内置 DNS 服务器查询 proxy.com。</li><li>内置 DNS 服务器复用步骤 3 中的连接，发出查询。</li><li>问题出现。步骤 3 中连接的建立，需要等待步骤 7 中的查询结果；步骤 7 完成查询，需要等待步骤 3 中的连接完全建立。</li><li>Good Game！</li></ol><p>解决方案：</p><ul><li>改内置 DNS 服务器的分流。</li><li>用 Hosts。</li><li><s>如果你还是不知道解决方案，就别用这个功能了。</s></li></ul><p>因此，<strong>不建议</strong> 经验不足的用户擅自使用此功能。</p></div><blockquote><p><code>dialerProxy</code>: &quot;&quot;</p></blockquote><p>一个出站代理的标识。当值不为空时，将使用指定的 outbound 发出连接。 此选项可用于支持底层传输方式的链式转发。</p><div class="custom-container danger"><p class="custom-container-title">警告</p><p>此选项与 ProxySettingsObject.Tag 不兼容</p></div><blockquote><p><code>acceptProxyProtocol</code>: true | false</p></blockquote><p>仅用于 inbound，指示是否接收 PROXY protocol。</p>',7),pa={href:"https://www.haproxy.org/download/2.2/doc/proxy-protocol.txt",target:"_blank",rel:"noopener noreferrer"},ca=(0,t.Uk)("PROXY protocol"),la=(0,t.Uk)(" 专用于传递请求的真实来源 IP 和端口，"),ua=(0,t._)("strong",null,"若你不了解它，请先忽略该项",-1),ra=(0,t.Uk)("。"),ia=(0,t.uE)('<p>常见的反代软件（如 HAProxy、Nginx）都可以配置发送它，VLESS fallbacks xver 也可以发送它。</p><p>填写 <code>true</code> 时，最底层 TCP 连接建立后，请求方必须先发送 PROXY protocol v1 或 v2，否则连接会被关闭。</p><blockquote><p><code>tcpKeepAliveInterval</code>: number</p></blockquote><p>TCP 保持活跃的数据包发送间隔，单位为秒。<s>该设置仅适用于 Linux 下。</s></p><p>不配置此项或配置为 0 表示使用 Go 默认值。</p><div class="custom-container tip"><p class="custom-container-title">提示</p><p>填负数时，如 <code>-1</code>，不启用 TCP 保持活跃。</p></div><blockquote><p><code>tcpcongestion</code>: &quot;&quot;</p></blockquote><p>TCP 开启内核的 bbr 拥塞控制 仅支持 linux。</p><ul><li>bbr (推荐)</li><li>cubic</li><li>reno （默认）</li></ul><blockquote><p><code>interface</code>: &quot;&quot;</p></blockquote><p>指定绑定出口网卡名称 仅支持 linux。</p>',11),ka={render:function(n,s){const a=(0,t.up)("RouterLink"),ka=(0,t.up)("OutboundLink"),da=(0,t.up)("Badge");return(0,t.wg)(),(0,t.iD)(t.HY,null,[o,(0,t._)("blockquote",null,[(0,t._)("p",null,[e,p,(0,t.Wm)(a,{to:"/config/transports/tcp.html"},{default:(0,t.w5)((()=>[c])),_:1})])]),l,(0,t._)("blockquote",null,[(0,t._)("p",null,[u,r,(0,t.Wm)(a,{to:"/config/transports/mkcp.html"},{default:(0,t.w5)((()=>[i])),_:1})])]),k,(0,t._)("blockquote",null,[(0,t._)("p",null,[d,b,(0,t.Wm)(a,{to:"/config/transports/websocket.html"},{default:(0,t.w5)((()=>[q])),_:1})])]),m,(0,t._)("blockquote",null,[(0,t._)("p",null,[g,S,(0,t.Wm)(a,{to:"/config/transports/h2.html"},{default:(0,t.w5)((()=>[f])),_:1})])]),h,(0,t._)("blockquote",null,[(0,t._)("p",null,[_,y,(0,t.Wm)(a,{to:"/config/transports/quic.html"},{default:(0,t.w5)((()=>[U])),_:1})])]),x,(0,t._)("blockquote",null,[(0,t._)("p",null,[T,A,(0,t.Wm)(a,{to:"/config/transports/grpc.html"},{default:(0,t.w5)((()=>[v])),_:1})])]),w,(0,t._)("blockquote",null,[(0,t._)("p",null,[P,j,(0,t.Wm)(a,{to:"/config/transports/domainsocket.html"},{default:(0,t.w5)((()=>[L])),_:1})])]),C,(0,t._)("ul",null,[I,(0,t._)("li",null,[O,E,(0,t._)("a",W,[D,(0,t.Wm)(ka)]),B]),(0,t._)("li",null,[F,N,(0,t.Wm)(a,{to:"/config/features/xtls.html"},{default:(0,t.w5)((()=>[R])),_:1}),X,(0,t.Wm)(da,{text:"Deprecated",type:"warning"})])]),Q,G,(0,t._)("blockquote",null,[(0,t._)("p",null,[V,H,Y,K,(0,t.Wm)(da,{text:"Deprecated",type:"warning"})])]),M,(0,t._)("blockquote",null,[(0,t._)("p",null,[J,z,(0,t.Wm)(a,{to:"/config/transports/tcp.html"},{default:(0,t.w5)((()=>[Z])),_:1})])]),$,(0,t._)("blockquote",null,[(0,t._)("p",null,[nn,sn,(0,t.Wm)(a,{to:"/config/transports/mkcp.html"},{default:(0,t.w5)((()=>[an])),_:1})])]),tn,(0,t._)("blockquote",null,[(0,t._)("p",null,[on,en,(0,t.Wm)(a,{to:"/config/transports/websocket.html"},{default:(0,t.w5)((()=>[pn])),_:1})])]),cn,(0,t._)("blockquote",null,[(0,t._)("p",null,[ln,un,(0,t.Wm)(a,{to:"/config/transports/h2.html"},{default:(0,t.w5)((()=>[rn])),_:1})])]),kn,(0,t._)("blockquote",null,[(0,t._)("p",null,[dn,bn,(0,t.Wm)(a,{to:"/config/transports/quic.html"},{default:(0,t.w5)((()=>[qn])),_:1})])]),mn,(0,t._)("blockquote",null,[(0,t._)("p",null,[gn,Sn,(0,t.Wm)(a,{to:"/config/transports/grpc.html"},{default:(0,t.w5)((()=>[fn])),_:1})])]),hn,(0,t._)("blockquote",null,[(0,t._)("p",null,[_n,yn,(0,t.Wm)(a,{to:"/config/transports/domainsocket.html"},{default:(0,t.w5)((()=>[Un])),_:1})])]),xn,(0,t._)("p",null,[Tn,(0,t._)("a",An,[vn,(0,t.Wm)(ka)]),wn,(0,t._)("a",Pn,[jn,(0,t.Wm)(ka)]),Ln]),Cn,(0,t._)("ol",In,[(0,t._)("li",null,[On,En,Wn,Dn,Bn,(0,t._)("a",Fn,[Nn,(0,t.Wm)(ka)])])]),(0,t._)("div",Rn,[Xn,(0,t._)("p",null,[Qn,Gn,Vn,Hn,Yn,Kn,Mn,(0,t.Wm)(a,{to:"/config/transports/websocket.html#browser-dialer"},{default:(0,t.w5)((()=>[Jn])),_:1}),zn])]),Zn,(0,t._)("div",$n,[ns,(0,t._)("p",null,[ss,(0,t._)("a",as,[ts,(0,t.Wm)(ka)]),os])]),es,(0,t._)("div",ps,[cs,(0,t._)("p",null,[ls,(0,t._)("a",us,[rs,(0,t.Wm)(ka)])])]),is,(0,t._)("p",null,[ks,(0,t._)("a",ds,[bs,(0,t.Wm)(ka)]),qs]),ms,(0,t._)("ul",null,[gs,(0,t._)("li",null,[(0,t._)("p",null,[Ss,fs,hs,(0,t._)("a",_s,[ys,(0,t.Wm)(ka)]),Us,xs,Ts]),As]),vs]),ws,(0,t._)("div",Ps,[js,(0,t._)("p",null,[Ls,(0,t.Wm)(a,{to:"/config/inbounds/dokodemo.html"},{default:(0,t.w5)((()=>[Cs])),_:1}),Is,Os,Es,Ws,Ds,Bs,Fs,Ns,Rs,Xs,Qs])]),Gs,(0,t._)("p",null,[Vs,(0,t._)("a",Hs,[Ys,(0,t.Wm)(ka)]),Ks]),Ms,(0,t._)("ul",null,[Js,(0,t._)("li",null,[zs,Zs,$s,na,sa,aa,(0,t.Wm)(a,{to:"/config/dns.html"},{default:(0,t.w5)((()=>[ta])),_:1}),oa])]),ea,(0,t._)("p",null,[(0,t._)("a",pa,[ca,(0,t.Wm)(ka)]),la,ua,ra]),ia],64)}}}}]);