"use strict";(self.webpackChunkXray_docs_next=self.webpackChunkXray_docs_next||[]).push([[3866],{41353:(n,a,s)=>{s.r(a),s.d(a,{data:()=>e});const e={key:"v-46333b48",path:"/document/level-2/redirect.html",title:"出站流量重定向",lang:"zh-CN",frontmatter:{title:"出站流量重定向"},excerpt:"",headers:[{level:2,title:"前言",slug:"前言",children:[]},{level:2,title:"1、安装代理或者 VPN 软件（例如 Wireguard、IPsec 等）",slug:"_1、安装代理或者-vpn-软件-例如-wireguard、ipsec-等",children:[]},{level:2,title:"2、编辑 VPN 配置文件（以 WireGuard 为例）",slug:"_2、编辑-vpn-配置文件-以-wireguard-为例",children:[]},{level:2,title:"3、启用 WireGuard 网络接口",slug:"_3、启用-wireguard-网络接口",children:[]},{level:2,title:"4、Xray-core 配置文件修改",slug:"_4、xray-core-配置文件修改",children:[]},{level:2,title:"5、系统设置配置",slug:"_5、系统设置配置",children:[]},{level:2,title:"6、完成 WireGuard 相关设置",slug:"_6、完成-wireguard-相关设置",children:[]},{level:2,title:"后记",slug:"后记",children:[]},{level:2,title:"感谢",slug:"感谢",children:[]}],filePathRelative:"document/level-2/redirect.md",git:{updatedTime:1703067035e3,contributors:[{name:"JimhHan",email:"50871214+JimhHan@users.noreply.github.com",commits:2},{name:"Jim Han",email:"50871214+JimhHan@users.noreply.github.com",commits:1},{name:"hmol233",email:"82594500+hmol233@users.noreply.github.com",commits:1},{name:"チセ",email:"123655015+chise0713@users.noreply.github.com",commits:1}]}}},75302:(n,a,s)=>{s.r(a),s.d(a,{default:()=>g});var e=s(66252);const t=(0,e.uE)('<h1 id="基于-fwmark-或-sendthrough-的流量重定向" tabindex="-1"><a class="header-anchor" href="#基于-fwmark-或-sendthrough-的流量重定向" aria-hidden="true">#</a> 基于 fwmark 或 sendThrough 的流量重定向</h1><p>通过 Xray 将特定的流量指向特定出口，实现全局路由“分流”</p><h2 id="前言" tabindex="-1"><a class="header-anchor" href="#前言" aria-hidden="true">#</a> 前言</h2><p>之前在网络上看到许多代理或者 VPN 会接管全局路由，如果与 Xray 同时安装，会导致 Xray 失效。参考了网络上许多教程，及时分流，也是通过维护一张或者多张 CIDR 路由表来实现的。这种情况下并不优雅，如果我想可以任意替换，实现按需分流，那有没有更好的办法呢？有！</p><p>通过 fwmark 或 Xray 的 sendThrough/sockopt.interface，再简单配合路由表功能即可实现：</p><ol><li>Xray 可设置指定的 Tag、域名等走指定接口。如果您的接口是双栈的，可以指定 IPV4 或者 IPV6</li><li>其余用户则走原 IPV4 或者 IPV6</li></ol><p>具体设置如下（以 Debian10 为例）：</p><h2 id="_1、安装代理或者-vpn-软件-例如-wireguard、ipsec-等" tabindex="-1"><a class="header-anchor" href="#_1、安装代理或者-vpn-软件-例如-wireguard、ipsec-等" aria-hidden="true">#</a> 1、安装代理或者 VPN 软件（例如 Wireguard、IPsec 等）</h2><p>根据不同系统和不同软件，请参考官方安装方法</p><h2 id="_2、编辑-vpn-配置文件-以-wireguard-为例" tabindex="-1"><a class="header-anchor" href="#_2、编辑-vpn-配置文件-以-wireguard-为例" aria-hidden="true">#</a> 2、编辑 VPN 配置文件（以 WireGuard 为例）</h2><p>原始文件：</p><div class="language-ini ext-ini line-numbers-mode"><pre class="language-ini"><code><span class="token header"><span class="token punctuation">[</span><span class="token section-name selector">Interface</span><span class="token punctuation">]</span></span>\n<span class="token key attr-name">PrivateKey</span> <span class="token punctuation">=</span> <span class="token value attr-value">&lt;PriKey&gt;</span>\n<span class="token key attr-name">Address</span> <span class="token punctuation">=</span> <span class="token value attr-value">&lt;IPv4&gt;</span>\n<span class="token key attr-name">Address</span> <span class="token punctuation">=</span> <span class="token value attr-value">&lt;IPv6&gt;</span>\n<span class="token key attr-name">DNS</span> <span class="token punctuation">=</span> <span class="token value attr-value">8.8.8.8</span>\n<span class="token key attr-name">MTU</span> <span class="token punctuation">=</span> <span class="token value attr-value">1280</span>\n<span class="token header"><span class="token punctuation">[</span><span class="token section-name selector">Peer</span><span class="token punctuation">]</span></span>\n<span class="token key attr-name">PublicKey</span> <span class="token punctuation">=</span> <span class="token value attr-value">&lt;Pubkey&gt;</span>\n<span class="token key attr-name">AllowedIPs</span> <span class="token punctuation">=</span> <span class="token value attr-value">::/0</span>\n<span class="token key attr-name">AllowedIPs</span> <span class="token punctuation">=</span> <span class="token value attr-value">0.0.0.0/0</span>\n<span class="token key attr-name">Endpoint</span> <span class="token punctuation">=</span> <span class="token value attr-value">&lt;EndpointIP&gt;:&lt;Port&gt;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>在 <code>[Interface]</code> 下添加如下命令：</p><div class="language-ini ext-ini line-numbers-mode"><pre class="language-ini"><code><span class="token key attr-name">Table</span> <span class="token punctuation">=</span> <span class="token value attr-value">&lt;table&gt;</span>\n<span class="token comment">### fwmark</span>\n<span class="token key attr-name">PostUP</span> <span class="token punctuation">=</span> <span class="token value attr-value">ip rule add fwmark &lt;mark&gt; lookup &lt;table&gt;</span>\n<span class="token key attr-name">PostDown</span> <span class="token punctuation">=</span> <span class="token value attr-value">ip rule del fwmark &lt;mark&gt; lookup &lt;table&gt;</span>\n<span class="token key attr-name">PostUP</span> <span class="token punctuation">=</span> <span class="token value attr-value">ip -6 rule add fwmark &lt;mark&gt; lookup &lt;table&gt;</span>\n<span class="token key attr-name">PostDown</span> <span class="token punctuation">=</span> <span class="token value attr-value">ip -6 rule del fwmark &lt;mark&gt; lookup &lt;table&gt;</span>\n<span class="token comment">## sendThrough</span>\n<span class="token key attr-name">PreUp</span> <span class="token punctuation">=</span> <span class="token value attr-value">ip rule add from &lt;IPv4&gt; lookup &lt;table&gt;</span>\n<span class="token key attr-name">PostDown</span> <span class="token punctuation">=</span> <span class="token value attr-value">ip rule del from &lt;IPv4&gt; lookup &lt;table&gt;</span>\n<span class="token key attr-name">PreUp</span> <span class="token punctuation">=</span> <span class="token value attr-value">ip -6 rule add from &lt;IPv6&gt; lookup &lt;table&gt;</span>\n<span class="token key attr-name">PostDown</span> <span class="token punctuation">=</span> <span class="token value attr-value">ip -6 rule del from &lt;IPv6&gt; lookup &lt;table&gt;</span>\n<span class="token comment">## sockopt.interface</span>\n<span class="token key attr-name">PreUp</span> <span class="token punctuation">=</span> <span class="token value attr-value">ip rule add oif %i lookup &lt;table&gt;</span>\n<span class="token key attr-name">PostDown</span> <span class="token punctuation">=</span> <span class="token value attr-value">ip rule del oif %i lookup &lt;table&gt;</span>\n<span class="token key attr-name">PreUp</span> <span class="token punctuation">=</span> <span class="token value attr-value">ip -6 rule add oif %i lookup &lt;table&gt;</span>\n<span class="token key attr-name">PostDown</span> <span class="token punctuation">=</span> <span class="token value attr-value">ip -6 rule del oif %i lookup &lt;table&gt;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><div class="custom-container tip"><p class="custom-container-title">提示</p><ul><li>此配置文件融合了 <code>fwmark</code> / <code>sendThrough</code> / <code>sockopt.interface</code>，表示</li><li>送入此设备 <code>%i</code> 的连接 / 送入此 <code>&lt;IPv4/6&gt;</code> 的连接 / <code>fwmark</code> 被标记为 <code>&lt;mark&gt;</code> 的连接</li><li>将会使用 wireguard 进行转发</li><li><code>%i</code> 是 wireguard 配置文件中的占位符，表示在启动时替换为这个设备的名称</li></ul></div><p>保存</p><p>可顺手安装</p><div class="custom-container warning"><p class="custom-container-title">注意</p><p>如果使用了 <code>[Interface]</code> 中的 <code>DNS</code> 字段，这个程序将会是必须的</p></div><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">apt</span> <span class="token function">install</span> openresolv\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h2 id="_3、启用-wireguard-网络接口" tabindex="-1"><a class="header-anchor" href="#_3、启用-wireguard-网络接口" aria-hidden="true">#</a> 3、启用 WireGuard 网络接口</h2><p>加载内核模块</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>modprobe wireguard\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>检查 WG 模块加载是否正常</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>lsmod <span class="token operator">|</span> <span class="token function">grep</span> wireguard\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h2 id="_4、xray-core-配置文件修改" tabindex="-1"><a class="header-anchor" href="#_4、xray-core-配置文件修改" aria-hidden="true">#</a> 4、Xray-core 配置文件修改</h2><div class="language-jsonc ext-jsonc line-numbers-mode"><pre class="language-jsonc"><code>{\n  &quot;api&quot;: {\n    &quot;services&quot;: [\n      &quot;HandlerService&quot;,\n      &quot;LoggerService&quot;,\n      &quot;StatsService&quot;\n    ],\n    &quot;tag&quot;: &quot;api&quot;\n  },\n  &quot;inbounds&quot;: [\n    {\n      &quot;listen&quot;: &quot;127.0.0.1&quot;,\n      &quot;port&quot;: &lt;port&gt;,\n      &quot;protocol&quot;: &quot;dokodemo-door&quot;,\n      &quot;settings&quot;: {\n        &quot;address&quot;: &quot;127.0.0.1&quot;\n      },\n      &quot;tag&quot;: &quot;api&quot;\n    }\n  ],\n  &quot;outbounds&quot;: [\n    {\n      &quot;protocol&quot;: &quot;freedom&quot;,\n      &quot;settings&quot;: {\n        &quot;domainStrategy&quot;: &quot;UseIPv4&quot;\n      }\n      //修改此处，可v4或者v6\n    },\n    //            &lt;--请在不同的方案中选择--&gt;   方案1：fwmark\n    {\n      &quot;protocol&quot;: &quot;freedom&quot;,\n      &quot;tag&quot;: &quot;wg0&quot;,\n      &quot;streamSettings&quot;: {\n        &quot;sockopt&quot;: {\n          &quot;mark&quot;: // &lt;mark&gt;\n        }\n      },\n      &quot;settings&quot;: {\n        &quot;domainStrategy&quot;: &quot;UseIPv6&quot;\n      }\n    }  //设置fwmark为&lt;mark&gt;的用户走指定方式”UseIPv6””UseIPv4”\n    //            &lt;--请在不同的方案中选择--&gt;   方案2：sendThrough\n    {\n      &quot;tag&quot;: &quot;wg0&quot;,\n      &quot;protocol&quot;: &quot;freedom&quot;,\n      &quot;sendThrough&quot;: &quot;your wg0 v4 address&quot;,\n      //修改此处，可v4或者v6\n      &quot;settings&quot;: {\n        &quot;domainStrategy&quot;: &quot;UseIPv4&quot;\n      }\n      //修改此处，可v4或者v6\n    },\n    //            &lt;--请在不同的方案中选择--&gt;   方案3：sockopt.interface\n    {\n      &quot;tag&quot;: &quot;wg0&quot;,\n      &quot;protocol&quot;: &quot;freedom&quot;,\n      &quot;settings&quot;: {\n        &quot;domainStrategy&quot;: &quot;UseIPv4&quot;\n      },\n      &quot;streamSettings&quot;: {\n        &quot;sockopt&quot;: {\n          &quot;interface&quot;: &quot;wg0&quot;\n        }\n      }\n    },\n    //            &lt;--请在不同的方案中选择--&gt;   结束\n    {\n      &quot;protocol&quot;: &quot;blackhole&quot;,\n      &quot;settings&quot;: {},\n      &quot;tag&quot;: &quot;blocked&quot;\n    }\n  ],\n  &quot;policy&quot;: {\n    &quot;system&quot;: {\n      &quot;statsInboundDownlink&quot;: true,\n      &quot;statsInboundUplink&quot;: true\n    }\n  },\n  &quot;routing&quot;: {\n    &quot;rules&quot;: [\n      {\n        &quot;inboundTag&quot;: [\n          &quot;api&quot;\n        ],\n        &quot;outboundTag&quot;: &quot;api&quot;,\n        &quot;type&quot;: &quot;field&quot;\n      },\n      {\n        &quot;type&quot;: &quot;field&quot;,\n        &quot;outboundTag&quot;: &quot;wg0&quot;,\n        &quot;inboundTag&quot;: [\n          &quot;&lt;inboundTag&gt;&quot;\n          //需要之前在 inbound 中指定好 Tag，这里是 api 生成的,还可以添加域名等等\n        ]\n      },\n      {\n        &quot;outboundTag&quot;: &quot;blocked&quot;,\n        &quot;protocol&quot;: [\n          &quot;bittorrent&quot;\n        ],\n        &quot;type&quot;: &quot;field&quot;\n      }\n    ]\n  },\n  &quot;stats&quot;: {}\n}\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br><span class="line-number">97</span><br><span class="line-number">98</span><br><span class="line-number">99</span><br><span class="line-number">100</span><br><span class="line-number">101</span><br><span class="line-number">102</span><br><span class="line-number">103</span><br><span class="line-number">104</span><br><span class="line-number">105</span><br><span class="line-number">106</span><br></div></div><div class="custom-container tip"><p class="custom-container-title">提示</p><p>可以通过修改 &quot;domainStrategy&quot;: &quot;UseIPv6&quot;来控制对应用户的访问方式 实测优先级要高于系统本身的 gai.config</p></div><h2 id="_5、系统设置配置" tabindex="-1"><a class="header-anchor" href="#_5、系统设置配置" aria-hidden="true">#</a> 5、系统设置配置</h2><div class="custom-container tip"><p class="custom-container-title">提示</p><p>需要打开系统的 ip_forward <code>sysctl -w net.ipv4.ip_forward=1</code><code>sysctl -w net.ipv6.conf.all.forwarding=1</code></p></div><h2 id="_6、完成-wireguard-相关设置" tabindex="-1"><a class="header-anchor" href="#_6、完成-wireguard-相关设置" aria-hidden="true">#</a> 6、完成 WireGuard 相关设置</h2><p>开启隧道</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>wg-quick up wg0\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>开机自启</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>systemctl <span class="token builtin class-name">enable</span> wg-quick@wg0\nsystemctl start wg-quick@wg0\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>验证 IPv4/IPv6</p><blockquote><p>在代理上 运行 <code>curl ip-api.com -4/-6</code> / 浏览器访问ip-api.com</p></blockquote><h2 id="后记" tabindex="-1"><a class="header-anchor" href="#后记" aria-hidden="true">#</a> 后记</h2><p>本文本意是可以避免的多余的流量浪费，将路由和分流的功能交给 Xray 处理。避免了维护路由表的繁琐工作。顺便技术提升 UP。</p><h2 id="感谢" tabindex="-1"><a class="header-anchor" href="#感谢" aria-hidden="true">#</a> 感谢</h2>',39),l={href:"https://github.com/XTLS/Xray-core",target:"_blank",rel:"noopener noreferrer"},r=(0,e.Uk)("XTLS/Xray-core"),p=(0,e.Uk)("; "),u={href:"https://github.com/v2fly/v2ray-core",target:"_blank",rel:"noopener noreferrer"},o=(0,e.Uk)("v2fly/v2ray-core"),i=(0,e.Uk)("; "),c={href:"https://www.wireguard.com/",target:"_blank",rel:"noopener noreferrer"},b=(0,e.Uk)("WireGuard"),m=(0,e.Uk)("; "),d={href:"https://p3terx.com/",target:"_blank",rel:"noopener noreferrer"},q=(0,e.Uk)("@p3terx"),k=(0,e.Uk)("; @w; @Hiram; @Luminous; @Ln; @JackChou;"),g={render:function(n,a){const s=(0,e.up)("OutboundLink");return(0,e.wg)(),(0,e.iD)(e.HY,null,[t,(0,e._)("p",null,[(0,e._)("a",l,[r,(0,e.Wm)(s)]),p,(0,e._)("a",u,[o,(0,e.Wm)(s)]),i,(0,e._)("a",c,[b,(0,e.Wm)(s)]),m,(0,e._)("a",d,[q,(0,e.Wm)(s)]),k])],64)}}}}]);