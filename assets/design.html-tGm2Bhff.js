import{_ as i,r as o,o as s,c as l,a as e,b as t,d as n,w as d,e as h}from"./app-eE4giq9J.js";const c="/assets/framework-fWbTmHWQ.png",_={},u=h('<h1 id="设计目标" tabindex="-1"><a class="header-anchor" href="#设计目标" aria-hidden="true">#</a> 设计目标</h1><ul><li>Xray 内核提供了一个平台，支持必要的网络代理功能，在其之上可以进二次开发，以提供更好的用户体验；</li><li>以跨平台为首要原则，以减少二次开发的成本；</li></ul><h2 id="架构" tabindex="-1"><a class="header-anchor" href="#架构" aria-hidden="true">#</a> 架构</h2><p><img src="'+c+'" alt="Architecture"></p><p>内核分为三层：应用层、代理层和传输层。</p><p>每一层内包含数个模块，模块间互相独立，同类型的模块可无缝替换。</p><h3 id="应用层" tabindex="-1"><a class="header-anchor" href="#应用层" aria-hidden="true">#</a> 应用层</h3><p>应用层包含一些代理层中常用的功能，这些功能被抽象出来，以便在不同的代理模块中复用。</p><p>应用层的模块应为纯软件实现，与硬件或平台相关的技术无关。</p><p>重要模块列表：</p>',10),p=e("li",null,"Dispatcher: 用于把入站代理所接收到的数据，传送给出站代理；",-1),x=e("li",null,"DNS: 内置的 DNS 服务器模块；",-1),f=e("li",null,"Proxy Manager: 代理管理器；",-1),b=e("h3",{id:"代理层",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#代理层","aria-hidden":"true"},"#"),t(" 代理层")],-1),m=e("p",null,"代理层分为两部分：入站代理（Inbound Proxy）和出站代理（Outbound Proxy）。",-1),g=e("p",null,"两部分相互独立，入站代理不依赖于某个特定的出站代理，反之亦然。",-1),y=e("h4",{id:"入站代理",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#入站代理","aria-hidden":"true"},"#"),t(" 入站代理")],-1),k={href:"https://github.com/xtls/Xray-core/blob/main/proxy/proxy.go",target:"_blank",rel:"noopener noreferrer"},N=e("h4",{id:"出站代理",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#出站代理","aria-hidden":"true"},"#"),t(" 出站代理")],-1),I={href:"https://github.com/xtls/Xray-core/blob/main/proxy/proxy.go",target:"_blank",rel:"noopener noreferrer"},L=e("h3",{id:"传输层",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#传输层","aria-hidden":"true"},"#"),t(" 传输层")],-1),V=e("p",null,"传输层提供一些网络数据传输相关的工具模块。",-1);function v(w,B){const a=o("RouterLink"),r=o("ExternalLinkIcon");return s(),l("div",null,[u,e("ul",null,[p,e("li",null,[t("Router: 路由模块，详见 "),n(a,{to:"/config/routing.html"},{default:d(()=>[t("路由配置")]),_:1}),t("；")]),x,f]),b,m,g,y,e("ul",null,[e("li",null,[t("实现 "),e("a",k,[t("proxy.Inbound"),n(r)]),t(" 接口；")])]),N,e("ul",null,[e("li",null,[t("实现 "),e("a",I,[t("proxy.Outbound"),n(r)]),t(" 接口；")])]),L,V])}const E=i(_,[["render",v],["__file","design.html.vue"]]);export{E as default};
