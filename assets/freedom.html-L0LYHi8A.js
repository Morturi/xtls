import{_ as a,r as u,o as d,c as l,a as e,b as o,d as s,w as n,e as c}from"./app-5k1_rNMD.js";const p={},r=c(`<h1 id="freedom" tabindex="-1"><a class="header-anchor" href="#freedom"><span>Freedom</span></a></h1><p>Freedom 是一个出站协议，可以用来向任意网络发送（正常的） TCP 或 UDP 数据。</p><h2 id="outboundconfigurationobject" tabindex="-1"><a class="header-anchor" href="#outboundconfigurationobject"><span>OutboundConfigurationObject</span></a></h2><div class="language-json line-numbers-mode" data-ext="json" data-title="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;domainStrategy&quot;</span><span class="token operator">:</span> <span class="token string">&quot;AsIs&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;redirect&quot;</span><span class="token operator">:</span> <span class="token string">&quot;127.0.0.1:3366&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;userLevel&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
  <span class="token property">&quot;fragment&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;packets&quot;</span><span class="token operator">:</span> <span class="token string">&quot;tlshello&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;length&quot;</span><span class="token operator">:</span> <span class="token string">&quot;100-200&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;interval&quot;</span><span class="token operator">:</span> <span class="token string">&quot;10-20&quot;</span> <span class="token comment">// 单位ms</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token property">&quot;proxyProtocol&quot;</span><span class="token operator">:</span> <span class="token number">0</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><code>domainStrategy</code>: &quot;AsIs&quot;<br> &quot;UseIP&quot; | &quot;UseIPv6v4&quot; | &quot;UseIPv6&quot; | &quot;UseIPv4v6&quot; | &quot;UseIPv4&quot;<br> &quot;ForceIP&quot; | &quot;ForceIPv6v4&quot; | &quot;ForceIPv6&quot; | &quot;ForceIPv4v6&quot; | &quot;ForceIPv4&quot;</p></blockquote><p>Xray-core v1.8.6 新增功能：<br><code>&quot;UseIPv6v4&quot;</code> | <code>&quot;UseIPv4v6&quot;</code><br><code>&quot;ForceIP&quot;</code> | <code>&quot;ForceIPv6v4&quot;</code> | <code>&quot;ForceIPv6&quot;</code> | <code>&quot;ForceIPv4v6&quot;</code> | <code>&quot;ForceIPv4&quot;</code></p><p>若不写此参数，或留空，默认值 <code>&quot;AsIs&quot;</code>。</p><p>当目标地址为域名时，配置相应的值，Freedom 的行为模式如下：</p>`,8),i=e("li",null,[e("code",null,'"AsIs"'),o("：Freedom 使用系统 DNS 同时查询 A 和 AAAA 记录获取 IP，向此域名发出连接。IPv4 或 IPv6 优先级由系统控制。")],-1),q=e("code",null,'"UseIP"',-1),v=e("code",null,'"UseIPv6v4"',-1),P=e("code",null,'"UseIPv6"',-1),_=e("code",null,'"UseIPv4v6"',-1),m=e("code",null,'"UseIPv4"',-1),I=e("code",null,'"ForceIP"',-1),h=e("code",null,'"ForceIPv6v4"',-1),k=e("code",null,'"ForceIPv6"',-1),b=e("code",null,'"ForceIPv4v6"',-1),F=e("code",null,'"ForceIPv4"',-1),f=e("li",null,[o("当使用 "),e("code",null,'"UseIP"'),o(" 系列值 或 "),e("code",null,'"ForceIP"'),o(" 系列值时，若没写 "),e("code",null,'"dns"'),o(" 配置，使用系统 DNS 同时查询 A 和 AAAA 记录获取 IP，向此域名发出连接。")],-1),g={class:"custom-container tip"},y=e("p",{class:"custom-container-title"},"TIP 1",-1),U=e("code",null,'"UseIP"',-1),A=e("code",null,'"ForceIP"',-1),x=e("code",null,"sendThrough",-1),T=e("code",null,"sendThrough",-1),j=c('<div class="custom-container tip"><p class="custom-container-title">TIP 2</p><p>当使用 <code>&quot;UseIPv4&quot;</code>、<code>&quot;UseIPv6&quot;</code> 或 <code>&quot;ForceIPv4&quot;</code>、<code>&quot;ForceIPv6&quot;</code> 模式时，Freedom 会只使用对应的 IPv4 或 IPv6 地址。当 <code>sendThrough</code> 指定了不匹配的本地地址时，将导致连接失败。</p></div><div class="custom-container tip"><p class="custom-container-title">TIP 3</p><p><code>&quot;UseIPv4&quot;</code>、<code>&quot;UseIPv6&quot;</code> 和 <code>&quot;ForceIPv4&quot;</code>、<code>&quot;ForceIPv6&quot;</code> 的区别是，前者解析失败了会走 AsIs，后者解析失败了会被 block。这样整个 <code>domainStrategy</code> 都更加灵活了。</p></div><blockquote><p><code>redirect</code>: address_port</p></blockquote><p>Freedom 会强制将所有数据发送到指定地址（而不是 inbound 指定的地址）。</p><p>其值为一个字符串，样例：<code>&quot;127.0.0.1:80&quot;</code>，<code>&quot;:1234&quot;</code>。</p><p>当地址不指定时，如 <code>&quot;:443&quot;</code>，Freedom 不会修改原先的目标地址。 当端口为 <code>0</code> 时，如 <code>&quot;xray.com: 0&quot;</code>，Freedom 不会修改原先的端口。</p><blockquote><p><code>userLevel</code>: number</p></blockquote>',7),N=e("code",null,"level",-1),S=c("<blockquote><p><code>fragment</code>: map</p></blockquote><p>一些键值对配置项，用于控制发出的 TCP 分片，在某些情况下可以欺骗审查系统，比如绕过 SNI 黑名单。</p><p><code>&quot;packets&quot;</code>：支持两种分片方式 &quot;1-3&quot; 是 TCP 的流切片，应用于客户端第 1 至第 3 次写数据。&quot;tlshello&quot; 是 TLS 握手包切片。</p><p><code>&quot;length&quot;</code>：分片包长 (byte)</p><p><code>&quot;interval&quot;</code>：分片间隔（ms）</p><blockquote><p><code>proxyProtocol</code>: number</p></blockquote><p>PROXY protocol 通常配合 <code>redirect</code> 重定向到开启了 PROXY protocol 协议的 Nginx 或其他后端服务中。如果后端服务不支持 PROXY protocol 协议，连接将会被断开。</p><p>proxyProtocol 的值为 PROXY protocol 版本号，可选 <code>1</code> 或 <code>2</code>，如不指定，默认为 <code>0</code> 不启用。</p>",8);function X(C,L){const t=u("RouterLink");return d(),l("div",null,[r,e("ul",null,[i,e("li",null,[q,o("、"),v,o("、"),P,o("、"),_,o("、"),m,o("：使用 Xray-core "),s(t,{to:"/config/dns.html"},{default:n(()=>[o("内置 DNS 服务器")]),_:1}),o(" 查询获取 IP，向此域名发出连接。")]),e("li",null,[I,o("、"),h,o("、"),k,o("、"),b,o("、"),F,o("：使用 Xray-core "),s(t,{to:"/config/dns.html"},{default:n(()=>[o("内置 DNS 服务器")]),_:1}),o(" 查询获取 IP，向此域名发出连接。")]),f]),e("div",g,[y,e("p",null,[o("当使用 "),U,o("、"),A,o(" 模式时，并且 "),s(t,{to:"/config/outbound.html#outboundobject"},{default:n(()=>[o("出站连接配置")]),_:1}),o(" 中指定了 "),x,o(" 时，Freedom 会根据 "),T,o(" 的值自动判断所需的 IP 类型，IPv4 或 IPv6。")])]),j,e("p",null,[o("用户等级，连接会使用这个用户等级对应的 "),s(t,{to:"/config/policy.html#levelpolicyobject"},{default:n(()=>[o("本地策略")]),_:1}),o("。")]),e("p",null,[o("userLevel 的值, 对应 "),s(t,{to:"/config/policy.html#policyobject"},{default:n(()=>[o("policy")]),_:1}),o(" 中 "),N,o(" 的值。 如不指定, 默认为 0。")]),S])}const R=a(p,[["render",X],["__file","freedom.html.vue"]]);export{R as default};
