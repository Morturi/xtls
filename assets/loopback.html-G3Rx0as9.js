import{_ as n,o,c as a,e}from"./app-_FKz0vWd.js";const s={},t=e(`<h1 id="loopback" tabindex="-1"><a class="header-anchor" href="#loopback"><span>Loopback</span></a></h1><p>Loopback 是个出站数据协议，其作用为将经该出站传出的数据重新送入路由入站，以达到数据无需离开 Xray-core 即可再次被路由处理的效果。</p><h2 id="outboundconfigurationobject" tabindex="-1"><a class="header-anchor" href="#outboundconfigurationobject"><span>OutboundConfigurationObject</span></a></h2><div class="language-json line-numbers-mode" data-ext="json" data-title="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;inboundTag&quot;</span><span class="token operator">:</span> <span class="token string">&quot;TagUseAsInbound&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><code>inboundTag</code>: string</p></blockquote><p>用于重新路由的入站协议标识。</p><p>该标识可以在路由中用于 <code>inboundTag</code> ，表示该出站中的数据可以被对应的路由规则再次处理。</p>`,7),c=[t];function i(d,p){return o(),a("div",null,c)}const l=n(s,[["render",i],["__file","loopback.html.vue"]]);export{l as default};
