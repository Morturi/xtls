import{_ as c,r as a,o as r,c as l,a as e,b as t,d as n,w as i,e as u}from"./app-eE4giq9J.js";const d={},p=e("h1",{id:"quic",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#quic","aria-hidden":"true"},"#"),t(" QUIC")],-1),h=e("p",null,"QUIC (Quick UDP Internet Connection) is a protocol proposed by Google for multiplexed and concurrent transmission using UDP. Its main advantages are:",-1),b=e("li",null,"Reduced number of roundtrips in handshake phase. (1-RTT or 0-RTT)",-1),f={href:"https://calendar.perfplanet.com/2020/head-of-line-blocking-in-quic-and-http-3-the-details/",target:"_blank",rel:"noopener noreferrer"},m=e("li",null,"Connection migration, (mainly on the client side) when switching from Wifi to 4G, the connection will not be interrupted.",-1),q=e("p",null,"QUIC is currently in the experimental phase and uses IETF implementation that is still being standardized, so compatibility with the final version cannot be guaranteed.",-1),k=e("li",null,"12-byte Connection ID",-1),_={href:"https://en.wikipedia.org/wiki/HTTP_persistent_connection",target:"_blank",rel:"noopener noreferrer"},v=e("h2",{id:"quicobject",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#quicobject","aria-hidden":"true"},"#"),t(" QuicObject")],-1),g=e("code",null,"QuicObject",-1),y=e("code",null,"quicSettings",-1),T={class:"custom-container danger"},w=e("p",{class:"custom-container-title"},"Danger",-1),I=e("p",null,"The configurations of both endpoints must be identical, otherwise the connection will fail.",-1),x=u(`<div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;security&quot;</span><span class="token operator">:</span> <span class="token string">&quot;none&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;key&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;header&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;none&quot;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><code>security</code>: &quot;none&quot; | &quot;aes-128-gcm&quot; | &quot;chacha20-poly1305&quot;</p></blockquote><p>Encryption method.</p><p>Extra encryption over entire QUIC packet, include the frame head part. Default value is &quot;none&quot; for no encryption. After being encrypted, QUIC packets will not be detected as QUIC but some other unknow traffic.</p><p>The default value is <code>none</code></p><blockquote><p><code>key</code>: string</p></blockquote><p>Encryption key used for encryption.</p><p>It can be any string and is effective when &quot;security&quot; is not set to &quot;none&quot;.</p><blockquote><p><code>header</code>: <a href="#headerobject">HeaderObject</a></p></blockquote><p>Packet header obfuscation settings.</p><h3 id="headerobject" tabindex="-1"><a class="header-anchor" href="#headerobject" aria-hidden="true">#</a> HeaderObject</h3><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;none&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><code>type</code>: string</p></blockquote><p>Type of obfuscation. Corresponding inbound and outbound proxy must have the same settings. Choices are:</p><ul><li><code>&quot;none&quot;</code>: Default value. No obfuscation is used.</li><li><code>&quot;srtp&quot;</code>: Obfuscated as SRTP traffic. It may be recognized as video calls such as Facetime.</li><li><code>&quot;utp&quot;</code>: Obfuscated as uTP traffic. It may be recognized as Bittorrent traffic.</li><li><code>&quot;wechat-video&quot;</code>: Obfuscated to WeChat traffic.</li><li><code>&quot;dtls&quot;</code>: Obfuscated as DTLS 1.2 packets.</li><li><code>&quot;wireguard&quot;</code>: Obfuscated as WireGuard packets. (NOT true WireGuard protocol)</li></ul><div class="custom-container tip"><p class="custom-container-title">Tip</p><p>When neither encryption nor obfuscation is enabled, QUIC transport is compatible with other QUIC tools. However it is recommended to enable either or both for better undetectable communication.</p></div>`,16);function C(j,Q){const o=a("ExternalLinkIcon"),s=a("RouterLink");return r(),l("div",null,[p,h,e("ol",null,[b,e("li",null,[t("Multiplexing, and no "),e("a",f,[t("Head-of-Line blocking"),n(o)]),t(" problem.")]),m]),q,e("ul",null,[e("li",null,[t("Default settings: "),e("ul",null,[k,e("li",null,[t("Automatically disconnect the connection if no data is transmitted for 30 seconds (which may affect the use of some "),e("a",_,[t("persistent connections"),n(o)]),t(").")])])])]),v,e("p",null,[g,t(" corresponds to the "),y,t(" item in the "),n(s,{to:"/en/config/transport.html"},{default:i(()=>[t("Transport Protocol")]),_:1}),t(".")]),e("div",T,[w,I,e("p",null,[t("QUIC requires TLS to be enabled and if it is not enabled in the "),n(s,{to:"/en/config/transport.html"},{default:i(()=>[t("Transport Protocol")]),_:1}),t(", Xray will issue a self-signed certificate for TLS communication.")])]),x])}const O=c(d,[["render",C],["__file","quic.html.vue"]]);export{O as default};
